
firefly_jar.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000110a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000024  00800060  0000110a  0000119e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800084  00800084  000011c2  2**0
                  ALLOC
  3 .stab         00000690  00000000  00000000  000011c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000820  00000000  00000000  00001854  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00002074  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  000021b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00002324  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00003f6d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  00004e58  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00005c08  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028e  00000000  00000000  00005d68  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00005ff6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  000067c4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	09 c0       	rjmp	.+18     	; 0x14 <__ctors_end>
       2:	21 c0       	rjmp	.+66     	; 0x46 <__bad_interrupt>
       4:	20 c0       	rjmp	.+64     	; 0x46 <__bad_interrupt>
       6:	47 c2       	rjmp	.+1166   	; 0x496 <__vector_3>
       8:	1e c0       	rjmp	.+60     	; 0x46 <__bad_interrupt>
       a:	1d c0       	rjmp	.+58     	; 0x46 <__bad_interrupt>
       c:	1c c0       	rjmp	.+56     	; 0x46 <__bad_interrupt>
       e:	1b c0       	rjmp	.+54     	; 0x46 <__bad_interrupt>
      10:	1a c0       	rjmp	.+52     	; 0x46 <__bad_interrupt>
      12:	19 c0       	rjmp	.+50     	; 0x46 <__bad_interrupt>

00000014 <__ctors_end>:
      14:	11 24       	eor	r1, r1
      16:	1f be       	out	0x3f, r1	; 63
      18:	cf e9       	ldi	r28, 0x9F	; 159
      1a:	cd bf       	out	0x3d, r28	; 61

0000001c <__do_copy_data>:
      1c:	10 e0       	ldi	r17, 0x00	; 0
      1e:	a0 e6       	ldi	r26, 0x60	; 96
      20:	b0 e0       	ldi	r27, 0x00	; 0
      22:	ea e0       	ldi	r30, 0x0A	; 10
      24:	f1 e1       	ldi	r31, 0x11	; 17
      26:	02 c0       	rjmp	.+4      	; 0x2c <.do_copy_data_start>

00000028 <.do_copy_data_loop>:
      28:	05 90       	lpm	r0, Z+
      2a:	0d 92       	st	X+, r0

0000002c <.do_copy_data_start>:
      2c:	a4 38       	cpi	r26, 0x84	; 132
      2e:	b1 07       	cpc	r27, r17
      30:	d9 f7       	brne	.-10     	; 0x28 <.do_copy_data_loop>

00000032 <__do_clear_bss>:
      32:	10 e0       	ldi	r17, 0x00	; 0
      34:	a4 e8       	ldi	r26, 0x84	; 132
      36:	b0 e0       	ldi	r27, 0x00	; 0
      38:	01 c0       	rjmp	.+2      	; 0x3c <.do_clear_bss_start>

0000003a <.do_clear_bss_loop>:
      3a:	1d 92       	st	X+, r1

0000003c <.do_clear_bss_start>:
      3c:	aa 38       	cpi	r26, 0x8A	; 138
      3e:	b1 07       	cpc	r27, r17
      40:	e1 f7       	brne	.-8      	; 0x3a <.do_clear_bss_loop>
      42:	b0 d1       	rcall	.+864    	; 0x3a4 <main>
      44:	60 c8       	rjmp	.-3904   	; 0xfffff106 <__eeprom_end+0xff7ef106>

00000046 <__bad_interrupt>:
      46:	dc cf       	rjmp	.-72     	; 0x0 <__vectors>

00000048 <getTime>:
        {0, 150,  LED5, PULSE_DOWN}
};

//return a random time interval from 0 to 255
int getTime()
{
      48:	df 93       	push	r29
      4a:	cf 93       	push	r28
      4c:	cd b7       	in	r28, 0x3d	; 61
      4e:	de b7       	in	r29, 0x3e	; 62
    return TCNT0;//just read the current timer/counter value
      50:	e2 e5       	ldi	r30, 0x52	; 82
      52:	f0 e0       	ldi	r31, 0x00	; 0
      54:	80 81       	ld	r24, Z
      56:	88 2f       	mov	r24, r24
      58:	90 e0       	ldi	r25, 0x00	; 0
}
      5a:	cf 91       	pop	r28
      5c:	df 91       	pop	r29
      5e:	08 95       	ret

00000060 <updateLedState>:

void updateLedState()
{
      60:	0f 93       	push	r16
      62:	1f 93       	push	r17
      64:	df 93       	push	r29
      66:	cf 93       	push	r28
      68:	00 d0       	rcall	.+0      	; 0x6a <updateLedState+0xa>
      6a:	cd b7       	in	r28, 0x3d	; 61
      6c:	de b7       	in	r29, 0x3e	; 62
    for(i = 0; i < N_LEDS; i++)
      6e:	10 92 84 00 	sts	0x0084, r1
      72:	5e c1       	rjmp	.+700    	; 0x330 <__stack+0x291>
    {
        switch(led_data[i].mBrightness)
      74:	80 91 84 00 	lds	r24, 0x0084
      78:	28 2f       	mov	r18, r24
      7a:	30 e0       	ldi	r19, 0x00	; 0
      7c:	c9 01       	movw	r24, r18
      7e:	88 0f       	add	r24, r24
      80:	99 1f       	adc	r25, r25
      82:	88 0f       	add	r24, r24
      84:	99 1f       	adc	r25, r25
      86:	82 0f       	add	r24, r18
      88:	93 1f       	adc	r25, r19
      8a:	fc 01       	movw	r30, r24
      8c:	e0 5a       	subi	r30, 0xA0	; 160
      8e:	ff 4f       	sbci	r31, 0xFF	; 255
      90:	80 81       	ld	r24, Z
      92:	28 2f       	mov	r18, r24
      94:	30 e0       	ldi	r19, 0x00	; 0
      96:	3a 83       	std	Y+2, r19	; 0x02
      98:	29 83       	std	Y+1, r18	; 0x01
      9a:	89 81       	ldd	r24, Y+1	; 0x01
      9c:	9a 81       	ldd	r25, Y+2	; 0x02
      9e:	00 97       	sbiw	r24, 0x00	; 0
      a0:	09 f4       	brne	.+2      	; 0xa4 <__stack+0x5>
      a2:	60 c0       	rjmp	.+192    	; 0x164 <__stack+0xc5>
      a4:	29 81       	ldd	r18, Y+1	; 0x01
      a6:	3a 81       	ldd	r19, Y+2	; 0x02
      a8:	24 36       	cpi	r18, 0x64	; 100
      aa:	31 05       	cpc	r19, r1
      ac:	09 f0       	breq	.+2      	; 0xb0 <__stack+0x11>
      ae:	c8 c0       	rjmp	.+400    	; 0x240 <__stack+0x1a1>
        {
            case MAX://led is on
                if(--led_data[i].mTime == 0)
      b0:	80 91 84 00 	lds	r24, 0x0084
      b4:	28 2f       	mov	r18, r24
      b6:	30 e0       	ldi	r19, 0x00	; 0
      b8:	c9 01       	movw	r24, r18
      ba:	88 0f       	add	r24, r24
      bc:	99 1f       	adc	r25, r25
      be:	88 0f       	add	r24, r24
      c0:	99 1f       	adc	r25, r25
      c2:	82 0f       	add	r24, r18
      c4:	93 1f       	adc	r25, r19
      c6:	fc 01       	movw	r30, r24
      c8:	ef 59       	subi	r30, 0x9F	; 159
      ca:	ff 4f       	sbci	r31, 0xFF	; 255
      cc:	80 81       	ld	r24, Z
      ce:	91 81       	ldd	r25, Z+1	; 0x01
      d0:	ac 01       	movw	r20, r24
      d2:	41 50       	subi	r20, 0x01	; 1
      d4:	50 40       	sbci	r21, 0x00	; 0
      d6:	c9 01       	movw	r24, r18
      d8:	88 0f       	add	r24, r24
      da:	99 1f       	adc	r25, r25
      dc:	88 0f       	add	r24, r24
      de:	99 1f       	adc	r25, r25
      e0:	82 0f       	add	r24, r18
      e2:	93 1f       	adc	r25, r19
      e4:	fc 01       	movw	r30, r24
      e6:	ef 59       	subi	r30, 0x9F	; 159
      e8:	ff 4f       	sbci	r31, 0xFF	; 255
      ea:	51 83       	std	Z+1, r21	; 0x01
      ec:	40 83       	st	Z, r20
      ee:	c9 01       	movw	r24, r18
      f0:	88 0f       	add	r24, r24
      f2:	99 1f       	adc	r25, r25
      f4:	88 0f       	add	r24, r24
      f6:	99 1f       	adc	r25, r25
      f8:	82 0f       	add	r24, r18
      fa:	93 1f       	adc	r25, r19
      fc:	fc 01       	movw	r30, r24
      fe:	ef 59       	subi	r30, 0x9F	; 159
     100:	ff 4f       	sbci	r31, 0xFF	; 255
     102:	80 81       	ld	r24, Z
     104:	91 81       	ldd	r25, Z+1	; 0x01
     106:	00 97       	sbiw	r24, 0x00	; 0
     108:	09 f0       	breq	.+2      	; 0x10c <__stack+0x6d>
     10a:	0d c1       	rjmp	.+538    	; 0x326 <__stack+0x287>
                {
                    //decrement the brightness, this puts the LED in a
                    //pulse state
                    led_data[i].mBrightness--;
     10c:	80 91 84 00 	lds	r24, 0x0084
     110:	28 2f       	mov	r18, r24
     112:	30 e0       	ldi	r19, 0x00	; 0
     114:	c9 01       	movw	r24, r18
     116:	88 0f       	add	r24, r24
     118:	99 1f       	adc	r25, r25
     11a:	88 0f       	add	r24, r24
     11c:	99 1f       	adc	r25, r25
     11e:	82 0f       	add	r24, r18
     120:	93 1f       	adc	r25, r19
     122:	fc 01       	movw	r30, r24
     124:	e0 5a       	subi	r30, 0xA0	; 160
     126:	ff 4f       	sbci	r31, 0xFF	; 255
     128:	80 81       	ld	r24, Z
     12a:	48 2f       	mov	r20, r24
     12c:	41 50       	subi	r20, 0x01	; 1
     12e:	c9 01       	movw	r24, r18
     130:	88 0f       	add	r24, r24
     132:	99 1f       	adc	r25, r25
     134:	88 0f       	add	r24, r24
     136:	99 1f       	adc	r25, r25
     138:	82 0f       	add	r24, r18
     13a:	93 1f       	adc	r25, r19
     13c:	fc 01       	movw	r30, r24
     13e:	e0 5a       	subi	r30, 0xA0	; 160
     140:	ff 4f       	sbci	r31, 0xFF	; 255
     142:	40 83       	st	Z, r20

                    //specify the "down" direction for pulsing
                    led_data[i].mPulseDirection = PULSE_DOWN;
     144:	80 91 84 00 	lds	r24, 0x0084
     148:	28 2f       	mov	r18, r24
     14a:	30 e0       	ldi	r19, 0x00	; 0
     14c:	c9 01       	movw	r24, r18
     14e:	88 0f       	add	r24, r24
     150:	99 1f       	adc	r25, r25
     152:	88 0f       	add	r24, r24
     154:	99 1f       	adc	r25, r25
     156:	82 0f       	add	r24, r18
     158:	93 1f       	adc	r25, r19
     15a:	fc 01       	movw	r30, r24
     15c:	ec 59       	subi	r30, 0x9C	; 156
     15e:	ff 4f       	sbci	r31, 0xFF	; 255
     160:	10 82       	st	Z, r1
     162:	e1 c0       	rjmp	.+450    	; 0x326 <__stack+0x287>
                }
                break;
            case 0://led is off
                if(--led_data[i].mTime == 0)
     164:	80 91 84 00 	lds	r24, 0x0084
     168:	28 2f       	mov	r18, r24
     16a:	30 e0       	ldi	r19, 0x00	; 0
     16c:	c9 01       	movw	r24, r18
     16e:	88 0f       	add	r24, r24
     170:	99 1f       	adc	r25, r25
     172:	88 0f       	add	r24, r24
     174:	99 1f       	adc	r25, r25
     176:	82 0f       	add	r24, r18
     178:	93 1f       	adc	r25, r19
     17a:	fc 01       	movw	r30, r24
     17c:	ef 59       	subi	r30, 0x9F	; 159
     17e:	ff 4f       	sbci	r31, 0xFF	; 255
     180:	80 81       	ld	r24, Z
     182:	91 81       	ldd	r25, Z+1	; 0x01
     184:	ac 01       	movw	r20, r24
     186:	41 50       	subi	r20, 0x01	; 1
     188:	50 40       	sbci	r21, 0x00	; 0
     18a:	c9 01       	movw	r24, r18
     18c:	88 0f       	add	r24, r24
     18e:	99 1f       	adc	r25, r25
     190:	88 0f       	add	r24, r24
     192:	99 1f       	adc	r25, r25
     194:	82 0f       	add	r24, r18
     196:	93 1f       	adc	r25, r19
     198:	fc 01       	movw	r30, r24
     19a:	ef 59       	subi	r30, 0x9F	; 159
     19c:	ff 4f       	sbci	r31, 0xFF	; 255
     19e:	51 83       	std	Z+1, r21	; 0x01
     1a0:	40 83       	st	Z, r20
     1a2:	c9 01       	movw	r24, r18
     1a4:	88 0f       	add	r24, r24
     1a6:	99 1f       	adc	r25, r25
     1a8:	88 0f       	add	r24, r24
     1aa:	99 1f       	adc	r25, r25
     1ac:	82 0f       	add	r24, r18
     1ae:	93 1f       	adc	r25, r19
     1b0:	fc 01       	movw	r30, r24
     1b2:	ef 59       	subi	r30, 0x9F	; 159
     1b4:	ff 4f       	sbci	r31, 0xFF	; 255
     1b6:	80 81       	ld	r24, Z
     1b8:	91 81       	ldd	r25, Z+1	; 0x01
     1ba:	00 97       	sbiw	r24, 0x00	; 0
     1bc:	09 f0       	breq	.+2      	; 0x1c0 <__stack+0x121>
     1be:	b3 c0       	rjmp	.+358    	; 0x326 <__stack+0x287>
                {
                    //increment the brightness,this puts the LED in
                    //a pulse state
                    led_data[i].mBrightness++;
     1c0:	80 91 84 00 	lds	r24, 0x0084
     1c4:	28 2f       	mov	r18, r24
     1c6:	30 e0       	ldi	r19, 0x00	; 0
     1c8:	c9 01       	movw	r24, r18
     1ca:	88 0f       	add	r24, r24
     1cc:	99 1f       	adc	r25, r25
     1ce:	88 0f       	add	r24, r24
     1d0:	99 1f       	adc	r25, r25
     1d2:	82 0f       	add	r24, r18
     1d4:	93 1f       	adc	r25, r19
     1d6:	fc 01       	movw	r30, r24
     1d8:	e0 5a       	subi	r30, 0xA0	; 160
     1da:	ff 4f       	sbci	r31, 0xFF	; 255
     1dc:	80 81       	ld	r24, Z
     1de:	48 2f       	mov	r20, r24
     1e0:	4f 5f       	subi	r20, 0xFF	; 255
     1e2:	c9 01       	movw	r24, r18
     1e4:	88 0f       	add	r24, r24
     1e6:	99 1f       	adc	r25, r25
     1e8:	88 0f       	add	r24, r24
     1ea:	99 1f       	adc	r25, r25
     1ec:	82 0f       	add	r24, r18
     1ee:	93 1f       	adc	r25, r19
     1f0:	fc 01       	movw	r30, r24
     1f2:	e0 5a       	subi	r30, 0xA0	; 160
     1f4:	ff 4f       	sbci	r31, 0xFF	; 255
     1f6:	40 83       	st	Z, r20

                    //specify the "up" direction for pulsing
                    led_data[i].mPulseDirection = PULSE_UP;
     1f8:	80 91 84 00 	lds	r24, 0x0084
     1fc:	28 2f       	mov	r18, r24
     1fe:	30 e0       	ldi	r19, 0x00	; 0
     200:	c9 01       	movw	r24, r18
     202:	88 0f       	add	r24, r24
     204:	99 1f       	adc	r25, r25
     206:	88 0f       	add	r24, r24
     208:	99 1f       	adc	r25, r25
     20a:	82 0f       	add	r24, r18
     20c:	93 1f       	adc	r25, r19
     20e:	fc 01       	movw	r30, r24
     210:	ec 59       	subi	r30, 0x9C	; 156
     212:	ff 4f       	sbci	r31, 0xFF	; 255
     214:	81 e0       	ldi	r24, 0x01	; 1
     216:	80 83       	st	Z, r24

                    //set the ON time
                    led_data[i].mTime = getTime() + 1;
     218:	80 91 84 00 	lds	r24, 0x0084
     21c:	08 2f       	mov	r16, r24
     21e:	10 e0       	ldi	r17, 0x00	; 0
     220:	13 df       	rcall	.-474    	; 0x48 <getTime>
     222:	01 96       	adiw	r24, 0x01	; 1
     224:	9c 01       	movw	r18, r24
     226:	c8 01       	movw	r24, r16
     228:	88 0f       	add	r24, r24
     22a:	99 1f       	adc	r25, r25
     22c:	88 0f       	add	r24, r24
     22e:	99 1f       	adc	r25, r25
     230:	80 0f       	add	r24, r16
     232:	91 1f       	adc	r25, r17
     234:	fc 01       	movw	r30, r24
     236:	ef 59       	subi	r30, 0x9F	; 159
     238:	ff 4f       	sbci	r31, 0xFF	; 255
     23a:	31 83       	std	Z+1, r19	; 0x01
     23c:	20 83       	st	Z, r18
     23e:	73 c0       	rjmp	.+230    	; 0x326 <__stack+0x287>
                }
                break;
            default: //pulse state
                if(led_data[i].mPulseDirection == PULSE_UP)
     240:	80 91 84 00 	lds	r24, 0x0084
     244:	28 2f       	mov	r18, r24
     246:	30 e0       	ldi	r19, 0x00	; 0
     248:	c9 01       	movw	r24, r18
     24a:	88 0f       	add	r24, r24
     24c:	99 1f       	adc	r25, r25
     24e:	88 0f       	add	r24, r24
     250:	99 1f       	adc	r25, r25
     252:	82 0f       	add	r24, r18
     254:	93 1f       	adc	r25, r19
     256:	fc 01       	movw	r30, r24
     258:	ec 59       	subi	r30, 0x9C	; 156
     25a:	ff 4f       	sbci	r31, 0xFF	; 255
     25c:	80 81       	ld	r24, Z
     25e:	81 30       	cpi	r24, 0x01	; 1
     260:	e9 f4       	brne	.+58     	; 0x29c <__stack+0x1fd>
                {
                    led_data[i].mBrightness++;
     262:	80 91 84 00 	lds	r24, 0x0084
     266:	28 2f       	mov	r18, r24
     268:	30 e0       	ldi	r19, 0x00	; 0
     26a:	c9 01       	movw	r24, r18
     26c:	88 0f       	add	r24, r24
     26e:	99 1f       	adc	r25, r25
     270:	88 0f       	add	r24, r24
     272:	99 1f       	adc	r25, r25
     274:	82 0f       	add	r24, r18
     276:	93 1f       	adc	r25, r19
     278:	fc 01       	movw	r30, r24
     27a:	e0 5a       	subi	r30, 0xA0	; 160
     27c:	ff 4f       	sbci	r31, 0xFF	; 255
     27e:	80 81       	ld	r24, Z
     280:	48 2f       	mov	r20, r24
     282:	4f 5f       	subi	r20, 0xFF	; 255
     284:	c9 01       	movw	r24, r18
     286:	88 0f       	add	r24, r24
     288:	99 1f       	adc	r25, r25
     28a:	88 0f       	add	r24, r24
     28c:	99 1f       	adc	r25, r25
     28e:	82 0f       	add	r24, r18
     290:	93 1f       	adc	r25, r19
     292:	fc 01       	movw	r30, r24
     294:	e0 5a       	subi	r30, 0xA0	; 160
     296:	ff 4f       	sbci	r31, 0xFF	; 255
     298:	40 83       	st	Z, r20
     29a:	45 c0       	rjmp	.+138    	; 0x326 <__stack+0x287>
                }
                else
                {
                    if(--led_data[i].mBrightness == 0)
     29c:	80 91 84 00 	lds	r24, 0x0084
     2a0:	28 2f       	mov	r18, r24
     2a2:	30 e0       	ldi	r19, 0x00	; 0
     2a4:	c9 01       	movw	r24, r18
     2a6:	88 0f       	add	r24, r24
     2a8:	99 1f       	adc	r25, r25
     2aa:	88 0f       	add	r24, r24
     2ac:	99 1f       	adc	r25, r25
     2ae:	82 0f       	add	r24, r18
     2b0:	93 1f       	adc	r25, r19
     2b2:	fc 01       	movw	r30, r24
     2b4:	e0 5a       	subi	r30, 0xA0	; 160
     2b6:	ff 4f       	sbci	r31, 0xFF	; 255
     2b8:	80 81       	ld	r24, Z
     2ba:	48 2f       	mov	r20, r24
     2bc:	41 50       	subi	r20, 0x01	; 1
     2be:	c9 01       	movw	r24, r18
     2c0:	88 0f       	add	r24, r24
     2c2:	99 1f       	adc	r25, r25
     2c4:	88 0f       	add	r24, r24
     2c6:	99 1f       	adc	r25, r25
     2c8:	82 0f       	add	r24, r18
     2ca:	93 1f       	adc	r25, r19
     2cc:	fc 01       	movw	r30, r24
     2ce:	e0 5a       	subi	r30, 0xA0	; 160
     2d0:	ff 4f       	sbci	r31, 0xFF	; 255
     2d2:	40 83       	st	Z, r20
     2d4:	c9 01       	movw	r24, r18
     2d6:	88 0f       	add	r24, r24
     2d8:	99 1f       	adc	r25, r25
     2da:	88 0f       	add	r24, r24
     2dc:	99 1f       	adc	r25, r25
     2de:	82 0f       	add	r24, r18
     2e0:	93 1f       	adc	r25, r19
     2e2:	fc 01       	movw	r30, r24
     2e4:	e0 5a       	subi	r30, 0xA0	; 160
     2e6:	ff 4f       	sbci	r31, 0xFF	; 255
     2e8:	80 81       	ld	r24, Z
     2ea:	88 23       	and	r24, r24
     2ec:	e1 f4       	brne	.+56     	; 0x326 <__stack+0x287>
                    {
                        //set the OFF time - make this longer than the on time
                        led_data[i].mTime = (getTime() + 1) * 5;
     2ee:	80 91 84 00 	lds	r24, 0x0084
     2f2:	08 2f       	mov	r16, r24
     2f4:	10 e0       	ldi	r17, 0x00	; 0
     2f6:	a8 de       	rcall	.-688    	; 0x48 <getTime>
     2f8:	9c 01       	movw	r18, r24
     2fa:	2f 5f       	subi	r18, 0xFF	; 255
     2fc:	3f 4f       	sbci	r19, 0xFF	; 255
     2fe:	c9 01       	movw	r24, r18
     300:	88 0f       	add	r24, r24
     302:	99 1f       	adc	r25, r25
     304:	88 0f       	add	r24, r24
     306:	99 1f       	adc	r25, r25
     308:	82 0f       	add	r24, r18
     30a:	93 1f       	adc	r25, r19
     30c:	9c 01       	movw	r18, r24
     30e:	c8 01       	movw	r24, r16
     310:	88 0f       	add	r24, r24
     312:	99 1f       	adc	r25, r25
     314:	88 0f       	add	r24, r24
     316:	99 1f       	adc	r25, r25
     318:	80 0f       	add	r24, r16
     31a:	91 1f       	adc	r25, r17
     31c:	fc 01       	movw	r30, r24
     31e:	ef 59       	subi	r30, 0x9F	; 159
     320:	ff 4f       	sbci	r31, 0xFF	; 255
     322:	31 83       	std	Z+1, r19	; 0x01
     324:	20 83       	st	Z, r18
    return TCNT0;//just read the current timer/counter value
}

void updateLedState()
{
    for(i = 0; i < N_LEDS; i++)
     326:	80 91 84 00 	lds	r24, 0x0084
     32a:	8f 5f       	subi	r24, 0xFF	; 255
     32c:	80 93 84 00 	sts	0x0084, r24
     330:	80 91 84 00 	lds	r24, 0x0084
     334:	85 30       	cpi	r24, 0x05	; 5
     336:	08 f4       	brcc	.+2      	; 0x33a <__stack+0x29b>
     338:	9d ce       	rjmp	.-710    	; 0x74 <updateLedState+0x14>
                    }
                }
                break;
        }
    }
}
     33a:	0f 90       	pop	r0
     33c:	0f 90       	pop	r0
     33e:	cf 91       	pop	r28
     340:	df 91       	pop	r29
     342:	1f 91       	pop	r17
     344:	0f 91       	pop	r16
     346:	08 95       	ret

00000348 <init_timers>:

void init_timers()
{
     348:	df 93       	push	r29
     34a:	cf 93       	push	r28
     34c:	cd b7       	in	r28, 0x3d	; 61
     34e:	de b7       	in	r29, 0x3e	; 62
    TIMSK0 = (1 << TOIE0);         // enable overflow interrupt
     350:	e9 e5       	ldi	r30, 0x59	; 89
     352:	f0 e0       	ldi	r31, 0x00	; 0
     354:	82 e0       	ldi	r24, 0x02	; 2
     356:	80 83       	st	Z, r24
    TCCR0B = (1 << CS00);          // start timer, no prescale
     358:	e3 e5       	ldi	r30, 0x53	; 83
     35a:	f0 e0       	ldi	r31, 0x00	; 0
     35c:	81 e0       	ldi	r24, 0x01	; 1
     35e:	80 83       	st	Z, r24

    //enable interrupts
    sei();
     360:	78 94       	sei
}
     362:	cf 91       	pop	r28
     364:	df 91       	pop	r29
     366:	08 95       	ret

00000368 <init_io>:

void init_io()
{
     368:	df 93       	push	r29
     36a:	cf 93       	push	r28
     36c:	cd b7       	in	r28, 0x3d	; 61
     36e:	de b7       	in	r29, 0x3e	; 62
    //set all LED pins as outputs
    DDRB |= ALL_LEDS;
     370:	a7 e3       	ldi	r26, 0x37	; 55
     372:	b0 e0       	ldi	r27, 0x00	; 0
     374:	e7 e3       	ldi	r30, 0x37	; 55
     376:	f0 e0       	ldi	r31, 0x00	; 0
     378:	80 81       	ld	r24, Z
     37a:	8f 61       	ori	r24, 0x1F	; 31
     37c:	8c 93       	st	X, r24
    PORTB &= ~(ALL_LEDS); //off to start
     37e:	a8 e3       	ldi	r26, 0x38	; 56
     380:	b0 e0       	ldi	r27, 0x00	; 0
     382:	e8 e3       	ldi	r30, 0x38	; 56
     384:	f0 e0       	ldi	r31, 0x00	; 0
     386:	80 81       	ld	r24, Z
     388:	80 7e       	andi	r24, 0xE0	; 224
     38a:	8c 93       	st	X, r24
}
     38c:	cf 91       	pop	r28
     38e:	df 91       	pop	r29
     390:	08 95       	ret

00000392 <setup>:

void setup()
 {
     392:	df 93       	push	r29
     394:	cf 93       	push	r28
     396:	cd b7       	in	r28, 0x3d	; 61
     398:	de b7       	in	r29, 0x3e	; 62
    init_io();
     39a:	e6 df       	rcall	.-52     	; 0x368 <init_io>
    init_timers();
     39c:	d5 df       	rcall	.-86     	; 0x348 <init_timers>
}
     39e:	cf 91       	pop	r28
     3a0:	df 91       	pop	r29
     3a2:	08 95       	ret

000003a4 <main>:

int main(void)
{
     3a4:	df 93       	push	r29
     3a6:	cf 93       	push	r28
     3a8:	cd b7       	in	r28, 0x3d	; 61
     3aa:	de b7       	in	r29, 0x3e	; 62
     3ac:	2e 97       	sbiw	r28, 0x0e	; 14
     3ae:	0f b6       	in	r0, 0x3f	; 63
     3b0:	f8 94       	cli
     3b2:	de bf       	out	0x3e, r29	; 62
     3b4:	0f be       	out	0x3f, r0	; 63
     3b6:	cd bf       	out	0x3d, r28	; 61
    setup();
     3b8:	ec df       	rcall	.-40     	; 0x392 <setup>

    //infinite loop
    while(1)
    {
        updateLedState();
     3ba:	52 de       	rcall	.-860    	; 0x60 <updateLedState>
     3bc:	80 e0       	ldi	r24, 0x00	; 0
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	a0 e2       	ldi	r26, 0x20	; 32
     3c2:	b1 e4       	ldi	r27, 0x41	; 65
     3c4:	8b 87       	std	Y+11, r24	; 0x0b
     3c6:	9c 87       	std	Y+12, r25	; 0x0c
     3c8:	ad 87       	std	Y+13, r26	; 0x0d
     3ca:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     3cc:	6b 85       	ldd	r22, Y+11	; 0x0b
     3ce:	7c 85       	ldd	r23, Y+12	; 0x0c
     3d0:	8d 85       	ldd	r24, Y+13	; 0x0d
     3d2:	9e 85       	ldd	r25, Y+14	; 0x0e
     3d4:	20 e0       	ldi	r18, 0x00	; 0
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	4a ef       	ldi	r20, 0xFA	; 250
     3da:	54 e4       	ldi	r21, 0x44	; 68
     3dc:	f0 d2       	rcall	.+1504   	; 0x9be <__mulsf3>
     3de:	dc 01       	movw	r26, r24
     3e0:	cb 01       	movw	r24, r22
     3e2:	8f 83       	std	Y+7, r24	; 0x07
     3e4:	98 87       	std	Y+8, r25	; 0x08
     3e6:	a9 87       	std	Y+9, r26	; 0x09
     3e8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     3ea:	6f 81       	ldd	r22, Y+7	; 0x07
     3ec:	78 85       	ldd	r23, Y+8	; 0x08
     3ee:	89 85       	ldd	r24, Y+9	; 0x09
     3f0:	9a 85       	ldd	r25, Y+10	; 0x0a
     3f2:	20 e0       	ldi	r18, 0x00	; 0
     3f4:	30 e0       	ldi	r19, 0x00	; 0
     3f6:	40 e8       	ldi	r20, 0x80	; 128
     3f8:	5f e3       	ldi	r21, 0x3F	; 63
     3fa:	2c d4       	rcall	.+2136   	; 0xc54 <__ltsf2>
     3fc:	88 23       	and	r24, r24
     3fe:	2c f4       	brge	.+10     	; 0x40a <main+0x66>
		__ticks = 1;
     400:	81 e0       	ldi	r24, 0x01	; 1
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	9e 83       	std	Y+6, r25	; 0x06
     406:	8d 83       	std	Y+5, r24	; 0x05
     408:	3b c0       	rjmp	.+118    	; 0x480 <main+0xdc>
	else if (__tmp > 65535)
     40a:	6f 81       	ldd	r22, Y+7	; 0x07
     40c:	78 85       	ldd	r23, Y+8	; 0x08
     40e:	89 85       	ldd	r24, Y+9	; 0x09
     410:	9a 85       	ldd	r25, Y+10	; 0x0a
     412:	20 e0       	ldi	r18, 0x00	; 0
     414:	3f ef       	ldi	r19, 0xFF	; 255
     416:	4f e7       	ldi	r20, 0x7F	; 127
     418:	57 e4       	ldi	r21, 0x47	; 71
     41a:	c6 d3       	rcall	.+1932   	; 0xba8 <__gtsf2>
     41c:	18 16       	cp	r1, r24
     41e:	3c f5       	brge	.+78     	; 0x46e <main+0xca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     420:	6b 85       	ldd	r22, Y+11	; 0x0b
     422:	7c 85       	ldd	r23, Y+12	; 0x0c
     424:	8d 85       	ldd	r24, Y+13	; 0x0d
     426:	9e 85       	ldd	r25, Y+14	; 0x0e
     428:	20 e0       	ldi	r18, 0x00	; 0
     42a:	30 e0       	ldi	r19, 0x00	; 0
     42c:	40 e2       	ldi	r20, 0x20	; 32
     42e:	51 e4       	ldi	r21, 0x41	; 65
     430:	c6 d2       	rcall	.+1420   	; 0x9be <__mulsf3>
     432:	dc 01       	movw	r26, r24
     434:	cb 01       	movw	r24, r22
     436:	bc 01       	movw	r22, r24
     438:	cd 01       	movw	r24, r26
     43a:	fd d0       	rcall	.+506    	; 0x636 <__fixunssfsi>
     43c:	dc 01       	movw	r26, r24
     43e:	cb 01       	movw	r24, r22
     440:	9e 83       	std	Y+6, r25	; 0x06
     442:	8d 83       	std	Y+5, r24	; 0x05
     444:	0f c0       	rjmp	.+30     	; 0x464 <main+0xc0>
     446:	88 ec       	ldi	r24, 0xC8	; 200
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	9c 83       	std	Y+4, r25	; 0x04
     44c:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     44e:	8b 81       	ldd	r24, Y+3	; 0x03
     450:	9c 81       	ldd	r25, Y+4	; 0x04
     452:	01 97       	sbiw	r24, 0x01	; 1
     454:	f1 f7       	brne	.-4      	; 0x452 <main+0xae>
     456:	9c 83       	std	Y+4, r25	; 0x04
     458:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     45a:	8d 81       	ldd	r24, Y+5	; 0x05
     45c:	9e 81       	ldd	r25, Y+6	; 0x06
     45e:	01 97       	sbiw	r24, 0x01	; 1
     460:	9e 83       	std	Y+6, r25	; 0x06
     462:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     464:	8d 81       	ldd	r24, Y+5	; 0x05
     466:	9e 81       	ldd	r25, Y+6	; 0x06
     468:	00 97       	sbiw	r24, 0x00	; 0
     46a:	69 f7       	brne	.-38     	; 0x446 <main+0xa2>
     46c:	a6 cf       	rjmp	.-180    	; 0x3ba <main+0x16>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     46e:	6f 81       	ldd	r22, Y+7	; 0x07
     470:	78 85       	ldd	r23, Y+8	; 0x08
     472:	89 85       	ldd	r24, Y+9	; 0x09
     474:	9a 85       	ldd	r25, Y+10	; 0x0a
     476:	df d0       	rcall	.+446    	; 0x636 <__fixunssfsi>
     478:	dc 01       	movw	r26, r24
     47a:	cb 01       	movw	r24, r22
     47c:	9e 83       	std	Y+6, r25	; 0x06
     47e:	8d 83       	std	Y+5, r24	; 0x05
     480:	8d 81       	ldd	r24, Y+5	; 0x05
     482:	9e 81       	ldd	r25, Y+6	; 0x06
     484:	9a 83       	std	Y+2, r25	; 0x02
     486:	89 83       	std	Y+1, r24	; 0x01
     488:	89 81       	ldd	r24, Y+1	; 0x01
     48a:	9a 81       	ldd	r25, Y+2	; 0x02
     48c:	01 97       	sbiw	r24, 0x01	; 1
     48e:	f1 f7       	brne	.-4      	; 0x48c <main+0xe8>
     490:	9a 83       	std	Y+2, r25	; 0x02
     492:	89 83       	std	Y+1, r24	; 0x01
     494:	92 cf       	rjmp	.-220    	; 0x3ba <main+0x16>

00000496 <__vector_3>:
/*
 * Timer/Counter overflow interrupt. This is called each time
 * the counter overflows (255 counts/cycles).
 */
ISR(TIM0_OVF_vect)
{
     496:	1f 92       	push	r1
     498:	0f 92       	push	r0
     49a:	0f b6       	in	r0, 0x3f	; 63
     49c:	0f 92       	push	r0
     49e:	11 24       	eor	r1, r1
     4a0:	2f 93       	push	r18
     4a2:	3f 93       	push	r19
     4a4:	4f 93       	push	r20
     4a6:	5f 93       	push	r21
     4a8:	8f 93       	push	r24
     4aa:	9f 93       	push	r25
     4ac:	ef 93       	push	r30
     4ae:	ff 93       	push	r31
     4b0:	df 93       	push	r29
     4b2:	cf 93       	push	r28
     4b4:	cd b7       	in	r28, 0x3d	; 61
     4b6:	de b7       	in	r29, 0x3e	; 62
    //static variables maintain state from one call to the next
    static unsigned char sPortBmask = ALL_LEDS;
    static unsigned char sCounter = 255;

    //set port pins straight away (no waiting for processing)
    PORTB = sPortBmask;
     4b8:	e8 e3       	ldi	r30, 0x38	; 56
     4ba:	f0 e0       	ldi	r31, 0x00	; 0
     4bc:	80 91 7a 00 	lds	r24, 0x007A
     4c0:	80 83       	st	Z, r24

    //this counter will overflow back to 0 after reaching 255.
    //So we end up adjusting the LED states for every 256 overflows.
    if(++sCounter == 0)
     4c2:	80 91 79 00 	lds	r24, 0x0079
     4c6:	8f 5f       	subi	r24, 0xFF	; 255
     4c8:	80 93 79 00 	sts	0x0079, r24
     4cc:	80 91 79 00 	lds	r24, 0x0079
     4d0:	88 23       	and	r24, r24
     4d2:	31 f5       	brne	.+76     	; 0x520 <__vector_3+0x8a>
    {
        for(i = 0; i < N_LEDS; i++)
     4d4:	10 92 84 00 	sts	0x0084, r1
     4d8:	1c c0       	rjmp	.+56     	; 0x512 <__vector_3+0x7c>
        {
            buffer[i] = led_data[i].mBrightness;
     4da:	80 91 84 00 	lds	r24, 0x0084
     4de:	48 2f       	mov	r20, r24
     4e0:	50 e0       	ldi	r21, 0x00	; 0
     4e2:	80 91 84 00 	lds	r24, 0x0084
     4e6:	28 2f       	mov	r18, r24
     4e8:	30 e0       	ldi	r19, 0x00	; 0
     4ea:	c9 01       	movw	r24, r18
     4ec:	88 0f       	add	r24, r24
     4ee:	99 1f       	adc	r25, r25
     4f0:	88 0f       	add	r24, r24
     4f2:	99 1f       	adc	r25, r25
     4f4:	82 0f       	add	r24, r18
     4f6:	93 1f       	adc	r25, r19
     4f8:	fc 01       	movw	r30, r24
     4fa:	e0 5a       	subi	r30, 0xA0	; 160
     4fc:	ff 4f       	sbci	r31, 0xFF	; 255
     4fe:	80 81       	ld	r24, Z
     500:	fa 01       	movw	r30, r20
     502:	eb 57       	subi	r30, 0x7B	; 123
     504:	ff 4f       	sbci	r31, 0xFF	; 255
     506:	80 83       	st	Z, r24

    //this counter will overflow back to 0 after reaching 255.
    //So we end up adjusting the LED states for every 256 overflows.
    if(++sCounter == 0)
    {
        for(i = 0; i < N_LEDS; i++)
     508:	80 91 84 00 	lds	r24, 0x0084
     50c:	8f 5f       	subi	r24, 0xFF	; 255
     50e:	80 93 84 00 	sts	0x0084, r24
     512:	80 91 84 00 	lds	r24, 0x0084
     516:	85 30       	cpi	r24, 0x05	; 5
     518:	00 f3       	brcs	.-64     	; 0x4da <__vector_3+0x44>
        {
            buffer[i] = led_data[i].mBrightness;
        }
        //set all pins to high
        sPortBmask = ALL_LEDS;
     51a:	8f e1       	ldi	r24, 0x1F	; 31
     51c:	80 93 7a 00 	sts	0x007A, r24
    }
    //this loop is considered for every overflow interrupt.
    //this is the software PWM.
    if(buffer[0] == sCounter) sPortBmask &= ~(1 << led_data[0].mPin);
     520:	90 91 85 00 	lds	r25, 0x0085
     524:	80 91 79 00 	lds	r24, 0x0079
     528:	98 17       	cp	r25, r24
     52a:	99 f4       	brne	.+38     	; 0x552 <__vector_3+0xbc>
     52c:	80 91 63 00 	lds	r24, 0x0063
     530:	28 2f       	mov	r18, r24
     532:	30 e0       	ldi	r19, 0x00	; 0
     534:	81 e0       	ldi	r24, 0x01	; 1
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	02 2e       	mov	r0, r18
     53a:	02 c0       	rjmp	.+4      	; 0x540 <__vector_3+0xaa>
     53c:	88 0f       	add	r24, r24
     53e:	99 1f       	adc	r25, r25
     540:	0a 94       	dec	r0
     542:	e2 f7       	brpl	.-8      	; 0x53c <__vector_3+0xa6>
     544:	98 2f       	mov	r25, r24
     546:	90 95       	com	r25
     548:	80 91 7a 00 	lds	r24, 0x007A
     54c:	89 23       	and	r24, r25
     54e:	80 93 7a 00 	sts	0x007A, r24
    if(buffer[1] == sCounter) sPortBmask &= ~(1 << led_data[1].mPin);
     552:	90 91 86 00 	lds	r25, 0x0086
     556:	80 91 79 00 	lds	r24, 0x0079
     55a:	98 17       	cp	r25, r24
     55c:	99 f4       	brne	.+38     	; 0x584 <__vector_3+0xee>
     55e:	80 91 68 00 	lds	r24, 0x0068
     562:	28 2f       	mov	r18, r24
     564:	30 e0       	ldi	r19, 0x00	; 0
     566:	81 e0       	ldi	r24, 0x01	; 1
     568:	90 e0       	ldi	r25, 0x00	; 0
     56a:	02 2e       	mov	r0, r18
     56c:	02 c0       	rjmp	.+4      	; 0x572 <__vector_3+0xdc>
     56e:	88 0f       	add	r24, r24
     570:	99 1f       	adc	r25, r25
     572:	0a 94       	dec	r0
     574:	e2 f7       	brpl	.-8      	; 0x56e <__vector_3+0xd8>
     576:	98 2f       	mov	r25, r24
     578:	90 95       	com	r25
     57a:	80 91 7a 00 	lds	r24, 0x007A
     57e:	89 23       	and	r24, r25
     580:	80 93 7a 00 	sts	0x007A, r24
    if(buffer[2] == sCounter) sPortBmask &= ~(1 << led_data[2].mPin);
     584:	90 91 87 00 	lds	r25, 0x0087
     588:	80 91 79 00 	lds	r24, 0x0079
     58c:	98 17       	cp	r25, r24
     58e:	99 f4       	brne	.+38     	; 0x5b6 <__vector_3+0x120>
     590:	80 91 6d 00 	lds	r24, 0x006D
     594:	28 2f       	mov	r18, r24
     596:	30 e0       	ldi	r19, 0x00	; 0
     598:	81 e0       	ldi	r24, 0x01	; 1
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	02 2e       	mov	r0, r18
     59e:	02 c0       	rjmp	.+4      	; 0x5a4 <__vector_3+0x10e>
     5a0:	88 0f       	add	r24, r24
     5a2:	99 1f       	adc	r25, r25
     5a4:	0a 94       	dec	r0
     5a6:	e2 f7       	brpl	.-8      	; 0x5a0 <__vector_3+0x10a>
     5a8:	98 2f       	mov	r25, r24
     5aa:	90 95       	com	r25
     5ac:	80 91 7a 00 	lds	r24, 0x007A
     5b0:	89 23       	and	r24, r25
     5b2:	80 93 7a 00 	sts	0x007A, r24
    if(buffer[3] == sCounter) sPortBmask &= ~(1 << led_data[3].mPin);
     5b6:	90 91 88 00 	lds	r25, 0x0088
     5ba:	80 91 79 00 	lds	r24, 0x0079
     5be:	98 17       	cp	r25, r24
     5c0:	99 f4       	brne	.+38     	; 0x5e8 <__vector_3+0x152>
     5c2:	80 91 72 00 	lds	r24, 0x0072
     5c6:	28 2f       	mov	r18, r24
     5c8:	30 e0       	ldi	r19, 0x00	; 0
     5ca:	81 e0       	ldi	r24, 0x01	; 1
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	02 2e       	mov	r0, r18
     5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <__vector_3+0x140>
     5d2:	88 0f       	add	r24, r24
     5d4:	99 1f       	adc	r25, r25
     5d6:	0a 94       	dec	r0
     5d8:	e2 f7       	brpl	.-8      	; 0x5d2 <__vector_3+0x13c>
     5da:	98 2f       	mov	r25, r24
     5dc:	90 95       	com	r25
     5de:	80 91 7a 00 	lds	r24, 0x007A
     5e2:	89 23       	and	r24, r25
     5e4:	80 93 7a 00 	sts	0x007A, r24
    if(buffer[4] == sCounter) sPortBmask &= ~(1 << led_data[4].mPin);
     5e8:	90 91 89 00 	lds	r25, 0x0089
     5ec:	80 91 79 00 	lds	r24, 0x0079
     5f0:	98 17       	cp	r25, r24
     5f2:	91 f4       	brne	.+36     	; 0x618 <__vector_3+0x182>
     5f4:	80 91 77 00 	lds	r24, 0x0077
     5f8:	28 2f       	mov	r18, r24
     5fa:	30 e0       	ldi	r19, 0x00	; 0
     5fc:	81 e0       	ldi	r24, 0x01	; 1
     5fe:	90 e0       	ldi	r25, 0x00	; 0
     600:	02 c0       	rjmp	.+4      	; 0x606 <__vector_3+0x170>
     602:	88 0f       	add	r24, r24
     604:	99 1f       	adc	r25, r25
     606:	2a 95       	dec	r18
     608:	e2 f7       	brpl	.-8      	; 0x602 <__vector_3+0x16c>
     60a:	98 2f       	mov	r25, r24
     60c:	90 95       	com	r25
     60e:	80 91 7a 00 	lds	r24, 0x007A
     612:	89 23       	and	r24, r25
     614:	80 93 7a 00 	sts	0x007A, r24
}
     618:	cf 91       	pop	r28
     61a:	df 91       	pop	r29
     61c:	ff 91       	pop	r31
     61e:	ef 91       	pop	r30
     620:	9f 91       	pop	r25
     622:	8f 91       	pop	r24
     624:	5f 91       	pop	r21
     626:	4f 91       	pop	r20
     628:	3f 91       	pop	r19
     62a:	2f 91       	pop	r18
     62c:	0f 90       	pop	r0
     62e:	0f be       	out	0x3f, r0	; 63
     630:	0f 90       	pop	r0
     632:	1f 90       	pop	r1
     634:	18 95       	reti

00000636 <__fixunssfsi>:
     636:	ef 92       	push	r14
     638:	ff 92       	push	r15
     63a:	0f 93       	push	r16
     63c:	1f 93       	push	r17
     63e:	7b 01       	movw	r14, r22
     640:	8c 01       	movw	r16, r24
     642:	20 e0       	ldi	r18, 0x00	; 0
     644:	30 e0       	ldi	r19, 0x00	; 0
     646:	40 e0       	ldi	r20, 0x00	; 0
     648:	5f e4       	ldi	r21, 0x4F	; 79
     64a:	d9 d2       	rcall	.+1458   	; 0xbfe <__gesf2>
     64c:	88 23       	and	r24, r24
     64e:	7c f0       	brlt	.+30     	; 0x66e <__fixunssfsi+0x38>
     650:	c8 01       	movw	r24, r16
     652:	b7 01       	movw	r22, r14
     654:	20 e0       	ldi	r18, 0x00	; 0
     656:	30 e0       	ldi	r19, 0x00	; 0
     658:	40 e0       	ldi	r20, 0x00	; 0
     65a:	5f e4       	ldi	r21, 0x4F	; 79
     65c:	5e d1       	rcall	.+700    	; 0x91a <__subsf3>
     65e:	25 d3       	rcall	.+1610   	; 0xcaa <__fixsfsi>
     660:	9b 01       	movw	r18, r22
     662:	ac 01       	movw	r20, r24
     664:	20 50       	subi	r18, 0x00	; 0
     666:	30 40       	sbci	r19, 0x00	; 0
     668:	40 40       	sbci	r20, 0x00	; 0
     66a:	50 48       	sbci	r21, 0x80	; 128
     66c:	05 c0       	rjmp	.+10     	; 0x678 <__fixunssfsi+0x42>
     66e:	c8 01       	movw	r24, r16
     670:	b7 01       	movw	r22, r14
     672:	1b d3       	rcall	.+1590   	; 0xcaa <__fixsfsi>
     674:	9b 01       	movw	r18, r22
     676:	ac 01       	movw	r20, r24
     678:	b9 01       	movw	r22, r18
     67a:	ca 01       	movw	r24, r20
     67c:	1f 91       	pop	r17
     67e:	0f 91       	pop	r16
     680:	ff 90       	pop	r15
     682:	ef 90       	pop	r14
     684:	08 95       	ret

00000686 <_fpadd_parts>:
     686:	a0 e0       	ldi	r26, 0x00	; 0
     688:	b0 e0       	ldi	r27, 0x00	; 0
     68a:	e8 e4       	ldi	r30, 0x48	; 72
     68c:	f3 e0       	ldi	r31, 0x03	; 3
     68e:	04 c5       	rjmp	.+2568   	; 0x1098 <__prologue_saves__>
     690:	dc 01       	movw	r26, r24
     692:	2b 01       	movw	r4, r22
     694:	fa 01       	movw	r30, r20
     696:	9c 91       	ld	r25, X
     698:	92 30       	cpi	r25, 0x02	; 2
     69a:	08 f4       	brcc	.+2      	; 0x69e <_fpadd_parts+0x18>
     69c:	39 c1       	rjmp	.+626    	; 0x910 <_fpadd_parts+0x28a>
     69e:	eb 01       	movw	r28, r22
     6a0:	88 81       	ld	r24, Y
     6a2:	82 30       	cpi	r24, 0x02	; 2
     6a4:	08 f4       	brcc	.+2      	; 0x6a8 <_fpadd_parts+0x22>
     6a6:	33 c1       	rjmp	.+614    	; 0x90e <_fpadd_parts+0x288>
     6a8:	94 30       	cpi	r25, 0x04	; 4
     6aa:	69 f4       	brne	.+26     	; 0x6c6 <_fpadd_parts+0x40>
     6ac:	84 30       	cpi	r24, 0x04	; 4
     6ae:	09 f0       	breq	.+2      	; 0x6b2 <_fpadd_parts+0x2c>
     6b0:	2f c1       	rjmp	.+606    	; 0x910 <_fpadd_parts+0x28a>
     6b2:	11 96       	adiw	r26, 0x01	; 1
     6b4:	9c 91       	ld	r25, X
     6b6:	11 97       	sbiw	r26, 0x01	; 1
     6b8:	89 81       	ldd	r24, Y+1	; 0x01
     6ba:	98 17       	cp	r25, r24
     6bc:	09 f4       	brne	.+2      	; 0x6c0 <_fpadd_parts+0x3a>
     6be:	28 c1       	rjmp	.+592    	; 0x910 <_fpadd_parts+0x28a>
     6c0:	ab e7       	ldi	r26, 0x7B	; 123
     6c2:	b0 e0       	ldi	r27, 0x00	; 0
     6c4:	25 c1       	rjmp	.+586    	; 0x910 <_fpadd_parts+0x28a>
     6c6:	84 30       	cpi	r24, 0x04	; 4
     6c8:	09 f4       	brne	.+2      	; 0x6cc <_fpadd_parts+0x46>
     6ca:	21 c1       	rjmp	.+578    	; 0x90e <_fpadd_parts+0x288>
     6cc:	82 30       	cpi	r24, 0x02	; 2
     6ce:	a9 f4       	brne	.+42     	; 0x6fa <_fpadd_parts+0x74>
     6d0:	92 30       	cpi	r25, 0x02	; 2
     6d2:	09 f0       	breq	.+2      	; 0x6d6 <_fpadd_parts+0x50>
     6d4:	1d c1       	rjmp	.+570    	; 0x910 <_fpadd_parts+0x28a>
     6d6:	9a 01       	movw	r18, r20
     6d8:	ad 01       	movw	r20, r26
     6da:	88 e0       	ldi	r24, 0x08	; 8
     6dc:	ea 01       	movw	r28, r20
     6de:	09 90       	ld	r0, Y+
     6e0:	ae 01       	movw	r20, r28
     6e2:	e9 01       	movw	r28, r18
     6e4:	09 92       	st	Y+, r0
     6e6:	9e 01       	movw	r18, r28
     6e8:	81 50       	subi	r24, 0x01	; 1
     6ea:	c1 f7       	brne	.-16     	; 0x6dc <_fpadd_parts+0x56>
     6ec:	e2 01       	movw	r28, r4
     6ee:	89 81       	ldd	r24, Y+1	; 0x01
     6f0:	11 96       	adiw	r26, 0x01	; 1
     6f2:	9c 91       	ld	r25, X
     6f4:	89 23       	and	r24, r25
     6f6:	81 83       	std	Z+1, r24	; 0x01
     6f8:	08 c1       	rjmp	.+528    	; 0x90a <_fpadd_parts+0x284>
     6fa:	92 30       	cpi	r25, 0x02	; 2
     6fc:	09 f4       	brne	.+2      	; 0x700 <_fpadd_parts+0x7a>
     6fe:	07 c1       	rjmp	.+526    	; 0x90e <_fpadd_parts+0x288>
     700:	12 96       	adiw	r26, 0x02	; 2
     702:	2d 90       	ld	r2, X+
     704:	3c 90       	ld	r3, X
     706:	13 97       	sbiw	r26, 0x03	; 3
     708:	eb 01       	movw	r28, r22
     70a:	8a 81       	ldd	r24, Y+2	; 0x02
     70c:	9b 81       	ldd	r25, Y+3	; 0x03
     70e:	14 96       	adiw	r26, 0x04	; 4
     710:	ad 90       	ld	r10, X+
     712:	bd 90       	ld	r11, X+
     714:	cd 90       	ld	r12, X+
     716:	dc 90       	ld	r13, X
     718:	17 97       	sbiw	r26, 0x07	; 7
     71a:	ec 80       	ldd	r14, Y+4	; 0x04
     71c:	fd 80       	ldd	r15, Y+5	; 0x05
     71e:	0e 81       	ldd	r16, Y+6	; 0x06
     720:	1f 81       	ldd	r17, Y+7	; 0x07
     722:	91 01       	movw	r18, r2
     724:	28 1b       	sub	r18, r24
     726:	39 0b       	sbc	r19, r25
     728:	b9 01       	movw	r22, r18
     72a:	37 ff       	sbrs	r19, 7
     72c:	04 c0       	rjmp	.+8      	; 0x736 <_fpadd_parts+0xb0>
     72e:	66 27       	eor	r22, r22
     730:	77 27       	eor	r23, r23
     732:	62 1b       	sub	r22, r18
     734:	73 0b       	sbc	r23, r19
     736:	60 32       	cpi	r22, 0x20	; 32
     738:	71 05       	cpc	r23, r1
     73a:	0c f0       	brlt	.+2      	; 0x73e <_fpadd_parts+0xb8>
     73c:	61 c0       	rjmp	.+194    	; 0x800 <_fpadd_parts+0x17a>
     73e:	12 16       	cp	r1, r18
     740:	13 06       	cpc	r1, r19
     742:	6c f5       	brge	.+90     	; 0x79e <_fpadd_parts+0x118>
     744:	37 01       	movw	r6, r14
     746:	48 01       	movw	r8, r16
     748:	06 2e       	mov	r0, r22
     74a:	04 c0       	rjmp	.+8      	; 0x754 <_fpadd_parts+0xce>
     74c:	96 94       	lsr	r9
     74e:	87 94       	ror	r8
     750:	77 94       	ror	r7
     752:	67 94       	ror	r6
     754:	0a 94       	dec	r0
     756:	d2 f7       	brpl	.-12     	; 0x74c <_fpadd_parts+0xc6>
     758:	21 e0       	ldi	r18, 0x01	; 1
     75a:	30 e0       	ldi	r19, 0x00	; 0
     75c:	40 e0       	ldi	r20, 0x00	; 0
     75e:	50 e0       	ldi	r21, 0x00	; 0
     760:	04 c0       	rjmp	.+8      	; 0x76a <_fpadd_parts+0xe4>
     762:	22 0f       	add	r18, r18
     764:	33 1f       	adc	r19, r19
     766:	44 1f       	adc	r20, r20
     768:	55 1f       	adc	r21, r21
     76a:	6a 95       	dec	r22
     76c:	d2 f7       	brpl	.-12     	; 0x762 <_fpadd_parts+0xdc>
     76e:	21 50       	subi	r18, 0x01	; 1
     770:	30 40       	sbci	r19, 0x00	; 0
     772:	40 40       	sbci	r20, 0x00	; 0
     774:	50 40       	sbci	r21, 0x00	; 0
     776:	2e 21       	and	r18, r14
     778:	3f 21       	and	r19, r15
     77a:	40 23       	and	r20, r16
     77c:	51 23       	and	r21, r17
     77e:	21 15       	cp	r18, r1
     780:	31 05       	cpc	r19, r1
     782:	41 05       	cpc	r20, r1
     784:	51 05       	cpc	r21, r1
     786:	21 f0       	breq	.+8      	; 0x790 <_fpadd_parts+0x10a>
     788:	21 e0       	ldi	r18, 0x01	; 1
     78a:	30 e0       	ldi	r19, 0x00	; 0
     78c:	40 e0       	ldi	r20, 0x00	; 0
     78e:	50 e0       	ldi	r21, 0x00	; 0
     790:	79 01       	movw	r14, r18
     792:	8a 01       	movw	r16, r20
     794:	e6 28       	or	r14, r6
     796:	f7 28       	or	r15, r7
     798:	08 29       	or	r16, r8
     79a:	19 29       	or	r17, r9
     79c:	3c c0       	rjmp	.+120    	; 0x816 <_fpadd_parts+0x190>
     79e:	23 2b       	or	r18, r19
     7a0:	d1 f1       	breq	.+116    	; 0x816 <_fpadd_parts+0x190>
     7a2:	26 0e       	add	r2, r22
     7a4:	37 1e       	adc	r3, r23
     7a6:	35 01       	movw	r6, r10
     7a8:	46 01       	movw	r8, r12
     7aa:	06 2e       	mov	r0, r22
     7ac:	04 c0       	rjmp	.+8      	; 0x7b6 <_fpadd_parts+0x130>
     7ae:	96 94       	lsr	r9
     7b0:	87 94       	ror	r8
     7b2:	77 94       	ror	r7
     7b4:	67 94       	ror	r6
     7b6:	0a 94       	dec	r0
     7b8:	d2 f7       	brpl	.-12     	; 0x7ae <_fpadd_parts+0x128>
     7ba:	21 e0       	ldi	r18, 0x01	; 1
     7bc:	30 e0       	ldi	r19, 0x00	; 0
     7be:	40 e0       	ldi	r20, 0x00	; 0
     7c0:	50 e0       	ldi	r21, 0x00	; 0
     7c2:	04 c0       	rjmp	.+8      	; 0x7cc <_fpadd_parts+0x146>
     7c4:	22 0f       	add	r18, r18
     7c6:	33 1f       	adc	r19, r19
     7c8:	44 1f       	adc	r20, r20
     7ca:	55 1f       	adc	r21, r21
     7cc:	6a 95       	dec	r22
     7ce:	d2 f7       	brpl	.-12     	; 0x7c4 <_fpadd_parts+0x13e>
     7d0:	21 50       	subi	r18, 0x01	; 1
     7d2:	30 40       	sbci	r19, 0x00	; 0
     7d4:	40 40       	sbci	r20, 0x00	; 0
     7d6:	50 40       	sbci	r21, 0x00	; 0
     7d8:	2a 21       	and	r18, r10
     7da:	3b 21       	and	r19, r11
     7dc:	4c 21       	and	r20, r12
     7de:	5d 21       	and	r21, r13
     7e0:	21 15       	cp	r18, r1
     7e2:	31 05       	cpc	r19, r1
     7e4:	41 05       	cpc	r20, r1
     7e6:	51 05       	cpc	r21, r1
     7e8:	21 f0       	breq	.+8      	; 0x7f2 <_fpadd_parts+0x16c>
     7ea:	21 e0       	ldi	r18, 0x01	; 1
     7ec:	30 e0       	ldi	r19, 0x00	; 0
     7ee:	40 e0       	ldi	r20, 0x00	; 0
     7f0:	50 e0       	ldi	r21, 0x00	; 0
     7f2:	59 01       	movw	r10, r18
     7f4:	6a 01       	movw	r12, r20
     7f6:	a6 28       	or	r10, r6
     7f8:	b7 28       	or	r11, r7
     7fa:	c8 28       	or	r12, r8
     7fc:	d9 28       	or	r13, r9
     7fe:	0b c0       	rjmp	.+22     	; 0x816 <_fpadd_parts+0x190>
     800:	82 15       	cp	r24, r2
     802:	93 05       	cpc	r25, r3
     804:	2c f0       	brlt	.+10     	; 0x810 <_fpadd_parts+0x18a>
     806:	1c 01       	movw	r2, r24
     808:	aa 24       	eor	r10, r10
     80a:	bb 24       	eor	r11, r11
     80c:	65 01       	movw	r12, r10
     80e:	03 c0       	rjmp	.+6      	; 0x816 <_fpadd_parts+0x190>
     810:	ee 24       	eor	r14, r14
     812:	ff 24       	eor	r15, r15
     814:	87 01       	movw	r16, r14
     816:	11 96       	adiw	r26, 0x01	; 1
     818:	9c 91       	ld	r25, X
     81a:	d2 01       	movw	r26, r4
     81c:	11 96       	adiw	r26, 0x01	; 1
     81e:	8c 91       	ld	r24, X
     820:	98 17       	cp	r25, r24
     822:	09 f4       	brne	.+2      	; 0x826 <_fpadd_parts+0x1a0>
     824:	45 c0       	rjmp	.+138    	; 0x8b0 <_fpadd_parts+0x22a>
     826:	99 23       	and	r25, r25
     828:	39 f0       	breq	.+14     	; 0x838 <_fpadd_parts+0x1b2>
     82a:	a8 01       	movw	r20, r16
     82c:	97 01       	movw	r18, r14
     82e:	2a 19       	sub	r18, r10
     830:	3b 09       	sbc	r19, r11
     832:	4c 09       	sbc	r20, r12
     834:	5d 09       	sbc	r21, r13
     836:	06 c0       	rjmp	.+12     	; 0x844 <_fpadd_parts+0x1be>
     838:	a6 01       	movw	r20, r12
     83a:	95 01       	movw	r18, r10
     83c:	2e 19       	sub	r18, r14
     83e:	3f 09       	sbc	r19, r15
     840:	40 0b       	sbc	r20, r16
     842:	51 0b       	sbc	r21, r17
     844:	57 fd       	sbrc	r21, 7
     846:	08 c0       	rjmp	.+16     	; 0x858 <_fpadd_parts+0x1d2>
     848:	11 82       	std	Z+1, r1	; 0x01
     84a:	33 82       	std	Z+3, r3	; 0x03
     84c:	22 82       	std	Z+2, r2	; 0x02
     84e:	24 83       	std	Z+4, r18	; 0x04
     850:	35 83       	std	Z+5, r19	; 0x05
     852:	46 83       	std	Z+6, r20	; 0x06
     854:	57 83       	std	Z+7, r21	; 0x07
     856:	1d c0       	rjmp	.+58     	; 0x892 <_fpadd_parts+0x20c>
     858:	81 e0       	ldi	r24, 0x01	; 1
     85a:	81 83       	std	Z+1, r24	; 0x01
     85c:	33 82       	std	Z+3, r3	; 0x03
     85e:	22 82       	std	Z+2, r2	; 0x02
     860:	88 27       	eor	r24, r24
     862:	99 27       	eor	r25, r25
     864:	dc 01       	movw	r26, r24
     866:	82 1b       	sub	r24, r18
     868:	93 0b       	sbc	r25, r19
     86a:	a4 0b       	sbc	r26, r20
     86c:	b5 0b       	sbc	r27, r21
     86e:	84 83       	std	Z+4, r24	; 0x04
     870:	95 83       	std	Z+5, r25	; 0x05
     872:	a6 83       	std	Z+6, r26	; 0x06
     874:	b7 83       	std	Z+7, r27	; 0x07
     876:	0d c0       	rjmp	.+26     	; 0x892 <_fpadd_parts+0x20c>
     878:	22 0f       	add	r18, r18
     87a:	33 1f       	adc	r19, r19
     87c:	44 1f       	adc	r20, r20
     87e:	55 1f       	adc	r21, r21
     880:	24 83       	std	Z+4, r18	; 0x04
     882:	35 83       	std	Z+5, r19	; 0x05
     884:	46 83       	std	Z+6, r20	; 0x06
     886:	57 83       	std	Z+7, r21	; 0x07
     888:	82 81       	ldd	r24, Z+2	; 0x02
     88a:	93 81       	ldd	r25, Z+3	; 0x03
     88c:	01 97       	sbiw	r24, 0x01	; 1
     88e:	93 83       	std	Z+3, r25	; 0x03
     890:	82 83       	std	Z+2, r24	; 0x02
     892:	24 81       	ldd	r18, Z+4	; 0x04
     894:	35 81       	ldd	r19, Z+5	; 0x05
     896:	46 81       	ldd	r20, Z+6	; 0x06
     898:	57 81       	ldd	r21, Z+7	; 0x07
     89a:	da 01       	movw	r26, r20
     89c:	c9 01       	movw	r24, r18
     89e:	01 97       	sbiw	r24, 0x01	; 1
     8a0:	a1 09       	sbc	r26, r1
     8a2:	b1 09       	sbc	r27, r1
     8a4:	8f 5f       	subi	r24, 0xFF	; 255
     8a6:	9f 4f       	sbci	r25, 0xFF	; 255
     8a8:	af 4f       	sbci	r26, 0xFF	; 255
     8aa:	bf 43       	sbci	r27, 0x3F	; 63
     8ac:	28 f3       	brcs	.-54     	; 0x878 <_fpadd_parts+0x1f2>
     8ae:	0b c0       	rjmp	.+22     	; 0x8c6 <_fpadd_parts+0x240>
     8b0:	91 83       	std	Z+1, r25	; 0x01
     8b2:	33 82       	std	Z+3, r3	; 0x03
     8b4:	22 82       	std	Z+2, r2	; 0x02
     8b6:	ea 0c       	add	r14, r10
     8b8:	fb 1c       	adc	r15, r11
     8ba:	0c 1d       	adc	r16, r12
     8bc:	1d 1d       	adc	r17, r13
     8be:	e4 82       	std	Z+4, r14	; 0x04
     8c0:	f5 82       	std	Z+5, r15	; 0x05
     8c2:	06 83       	std	Z+6, r16	; 0x06
     8c4:	17 83       	std	Z+7, r17	; 0x07
     8c6:	83 e0       	ldi	r24, 0x03	; 3
     8c8:	80 83       	st	Z, r24
     8ca:	24 81       	ldd	r18, Z+4	; 0x04
     8cc:	35 81       	ldd	r19, Z+5	; 0x05
     8ce:	46 81       	ldd	r20, Z+6	; 0x06
     8d0:	57 81       	ldd	r21, Z+7	; 0x07
     8d2:	57 ff       	sbrs	r21, 7
     8d4:	1a c0       	rjmp	.+52     	; 0x90a <_fpadd_parts+0x284>
     8d6:	c9 01       	movw	r24, r18
     8d8:	aa 27       	eor	r26, r26
     8da:	97 fd       	sbrc	r25, 7
     8dc:	a0 95       	com	r26
     8de:	ba 2f       	mov	r27, r26
     8e0:	81 70       	andi	r24, 0x01	; 1
     8e2:	90 70       	andi	r25, 0x00	; 0
     8e4:	a0 70       	andi	r26, 0x00	; 0
     8e6:	b0 70       	andi	r27, 0x00	; 0
     8e8:	56 95       	lsr	r21
     8ea:	47 95       	ror	r20
     8ec:	37 95       	ror	r19
     8ee:	27 95       	ror	r18
     8f0:	82 2b       	or	r24, r18
     8f2:	93 2b       	or	r25, r19
     8f4:	a4 2b       	or	r26, r20
     8f6:	b5 2b       	or	r27, r21
     8f8:	84 83       	std	Z+4, r24	; 0x04
     8fa:	95 83       	std	Z+5, r25	; 0x05
     8fc:	a6 83       	std	Z+6, r26	; 0x06
     8fe:	b7 83       	std	Z+7, r27	; 0x07
     900:	82 81       	ldd	r24, Z+2	; 0x02
     902:	93 81       	ldd	r25, Z+3	; 0x03
     904:	01 96       	adiw	r24, 0x01	; 1
     906:	93 83       	std	Z+3, r25	; 0x03
     908:	82 83       	std	Z+2, r24	; 0x02
     90a:	df 01       	movw	r26, r30
     90c:	01 c0       	rjmp	.+2      	; 0x910 <_fpadd_parts+0x28a>
     90e:	d2 01       	movw	r26, r4
     910:	cd 01       	movw	r24, r26
     912:	cd b7       	in	r28, 0x3d	; 61
     914:	de b7       	in	r29, 0x3e	; 62
     916:	e2 e1       	ldi	r30, 0x12	; 18
     918:	db c3       	rjmp	.+1974   	; 0x10d0 <__epilogue_restores__>

0000091a <__subsf3>:
     91a:	a0 e2       	ldi	r26, 0x20	; 32
     91c:	b0 e0       	ldi	r27, 0x00	; 0
     91e:	e2 e9       	ldi	r30, 0x92	; 146
     920:	f4 e0       	ldi	r31, 0x04	; 4
     922:	c6 c3       	rjmp	.+1932   	; 0x10b0 <__prologue_saves__+0x18>
     924:	69 83       	std	Y+1, r22	; 0x01
     926:	7a 83       	std	Y+2, r23	; 0x02
     928:	8b 83       	std	Y+3, r24	; 0x03
     92a:	9c 83       	std	Y+4, r25	; 0x04
     92c:	2d 83       	std	Y+5, r18	; 0x05
     92e:	3e 83       	std	Y+6, r19	; 0x06
     930:	4f 83       	std	Y+7, r20	; 0x07
     932:	58 87       	std	Y+8, r21	; 0x08
     934:	e9 e0       	ldi	r30, 0x09	; 9
     936:	ee 2e       	mov	r14, r30
     938:	f1 2c       	mov	r15, r1
     93a:	ec 0e       	add	r14, r28
     93c:	fd 1e       	adc	r15, r29
     93e:	ce 01       	movw	r24, r28
     940:	01 96       	adiw	r24, 0x01	; 1
     942:	b7 01       	movw	r22, r14
     944:	d8 d2       	rcall	.+1456   	; 0xef6 <__unpack_f>
     946:	8e 01       	movw	r16, r28
     948:	0f 5e       	subi	r16, 0xEF	; 239
     94a:	1f 4f       	sbci	r17, 0xFF	; 255
     94c:	ce 01       	movw	r24, r28
     94e:	05 96       	adiw	r24, 0x05	; 5
     950:	b8 01       	movw	r22, r16
     952:	d1 d2       	rcall	.+1442   	; 0xef6 <__unpack_f>
     954:	8a 89       	ldd	r24, Y+18	; 0x12
     956:	91 e0       	ldi	r25, 0x01	; 1
     958:	89 27       	eor	r24, r25
     95a:	8a 8b       	std	Y+18, r24	; 0x12
     95c:	c7 01       	movw	r24, r14
     95e:	b8 01       	movw	r22, r16
     960:	ae 01       	movw	r20, r28
     962:	47 5e       	subi	r20, 0xE7	; 231
     964:	5f 4f       	sbci	r21, 0xFF	; 255
     966:	8f de       	rcall	.-738    	; 0x686 <_fpadd_parts>
     968:	f1 d1       	rcall	.+994    	; 0xd4c <__pack_f>
     96a:	a0 96       	adiw	r28, 0x20	; 32
     96c:	e6 e0       	ldi	r30, 0x06	; 6
     96e:	bc c3       	rjmp	.+1912   	; 0x10e8 <__epilogue_restores__+0x18>

00000970 <__addsf3>:
     970:	a0 e2       	ldi	r26, 0x20	; 32
     972:	b0 e0       	ldi	r27, 0x00	; 0
     974:	ed eb       	ldi	r30, 0xBD	; 189
     976:	f4 e0       	ldi	r31, 0x04	; 4
     978:	9b c3       	rjmp	.+1846   	; 0x10b0 <__prologue_saves__+0x18>
     97a:	69 83       	std	Y+1, r22	; 0x01
     97c:	7a 83       	std	Y+2, r23	; 0x02
     97e:	8b 83       	std	Y+3, r24	; 0x03
     980:	9c 83       	std	Y+4, r25	; 0x04
     982:	2d 83       	std	Y+5, r18	; 0x05
     984:	3e 83       	std	Y+6, r19	; 0x06
     986:	4f 83       	std	Y+7, r20	; 0x07
     988:	58 87       	std	Y+8, r21	; 0x08
     98a:	f9 e0       	ldi	r31, 0x09	; 9
     98c:	ef 2e       	mov	r14, r31
     98e:	f1 2c       	mov	r15, r1
     990:	ec 0e       	add	r14, r28
     992:	fd 1e       	adc	r15, r29
     994:	ce 01       	movw	r24, r28
     996:	01 96       	adiw	r24, 0x01	; 1
     998:	b7 01       	movw	r22, r14
     99a:	ad d2       	rcall	.+1370   	; 0xef6 <__unpack_f>
     99c:	8e 01       	movw	r16, r28
     99e:	0f 5e       	subi	r16, 0xEF	; 239
     9a0:	1f 4f       	sbci	r17, 0xFF	; 255
     9a2:	ce 01       	movw	r24, r28
     9a4:	05 96       	adiw	r24, 0x05	; 5
     9a6:	b8 01       	movw	r22, r16
     9a8:	a6 d2       	rcall	.+1356   	; 0xef6 <__unpack_f>
     9aa:	c7 01       	movw	r24, r14
     9ac:	b8 01       	movw	r22, r16
     9ae:	ae 01       	movw	r20, r28
     9b0:	47 5e       	subi	r20, 0xE7	; 231
     9b2:	5f 4f       	sbci	r21, 0xFF	; 255
     9b4:	68 de       	rcall	.-816    	; 0x686 <_fpadd_parts>
     9b6:	ca d1       	rcall	.+916    	; 0xd4c <__pack_f>
     9b8:	a0 96       	adiw	r28, 0x20	; 32
     9ba:	e6 e0       	ldi	r30, 0x06	; 6
     9bc:	95 c3       	rjmp	.+1834   	; 0x10e8 <__epilogue_restores__+0x18>

000009be <__mulsf3>:
     9be:	a0 e2       	ldi	r26, 0x20	; 32
     9c0:	b0 e0       	ldi	r27, 0x00	; 0
     9c2:	e4 ee       	ldi	r30, 0xE4	; 228
     9c4:	f4 e0       	ldi	r31, 0x04	; 4
     9c6:	68 c3       	rjmp	.+1744   	; 0x1098 <__prologue_saves__>
     9c8:	69 83       	std	Y+1, r22	; 0x01
     9ca:	7a 83       	std	Y+2, r23	; 0x02
     9cc:	8b 83       	std	Y+3, r24	; 0x03
     9ce:	9c 83       	std	Y+4, r25	; 0x04
     9d0:	2d 83       	std	Y+5, r18	; 0x05
     9d2:	3e 83       	std	Y+6, r19	; 0x06
     9d4:	4f 83       	std	Y+7, r20	; 0x07
     9d6:	58 87       	std	Y+8, r21	; 0x08
     9d8:	ce 01       	movw	r24, r28
     9da:	01 96       	adiw	r24, 0x01	; 1
     9dc:	be 01       	movw	r22, r28
     9de:	67 5f       	subi	r22, 0xF7	; 247
     9e0:	7f 4f       	sbci	r23, 0xFF	; 255
     9e2:	89 d2       	rcall	.+1298   	; 0xef6 <__unpack_f>
     9e4:	ce 01       	movw	r24, r28
     9e6:	05 96       	adiw	r24, 0x05	; 5
     9e8:	be 01       	movw	r22, r28
     9ea:	6f 5e       	subi	r22, 0xEF	; 239
     9ec:	7f 4f       	sbci	r23, 0xFF	; 255
     9ee:	83 d2       	rcall	.+1286   	; 0xef6 <__unpack_f>
     9f0:	99 85       	ldd	r25, Y+9	; 0x09
     9f2:	92 30       	cpi	r25, 0x02	; 2
     9f4:	88 f0       	brcs	.+34     	; 0xa18 <__mulsf3+0x5a>
     9f6:	89 89       	ldd	r24, Y+17	; 0x11
     9f8:	82 30       	cpi	r24, 0x02	; 2
     9fa:	c8 f0       	brcs	.+50     	; 0xa2e <__mulsf3+0x70>
     9fc:	94 30       	cpi	r25, 0x04	; 4
     9fe:	19 f4       	brne	.+6      	; 0xa06 <__mulsf3+0x48>
     a00:	82 30       	cpi	r24, 0x02	; 2
     a02:	51 f4       	brne	.+20     	; 0xa18 <__mulsf3+0x5a>
     a04:	04 c0       	rjmp	.+8      	; 0xa0e <__mulsf3+0x50>
     a06:	84 30       	cpi	r24, 0x04	; 4
     a08:	29 f4       	brne	.+10     	; 0xa14 <__mulsf3+0x56>
     a0a:	92 30       	cpi	r25, 0x02	; 2
     a0c:	81 f4       	brne	.+32     	; 0xa2e <__mulsf3+0x70>
     a0e:	8b e7       	ldi	r24, 0x7B	; 123
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	c6 c0       	rjmp	.+396    	; 0xba0 <__mulsf3+0x1e2>
     a14:	92 30       	cpi	r25, 0x02	; 2
     a16:	49 f4       	brne	.+18     	; 0xa2a <__mulsf3+0x6c>
     a18:	20 e0       	ldi	r18, 0x00	; 0
     a1a:	9a 85       	ldd	r25, Y+10	; 0x0a
     a1c:	8a 89       	ldd	r24, Y+18	; 0x12
     a1e:	98 13       	cpse	r25, r24
     a20:	21 e0       	ldi	r18, 0x01	; 1
     a22:	2a 87       	std	Y+10, r18	; 0x0a
     a24:	ce 01       	movw	r24, r28
     a26:	09 96       	adiw	r24, 0x09	; 9
     a28:	bb c0       	rjmp	.+374    	; 0xba0 <__mulsf3+0x1e2>
     a2a:	82 30       	cpi	r24, 0x02	; 2
     a2c:	49 f4       	brne	.+18     	; 0xa40 <__mulsf3+0x82>
     a2e:	20 e0       	ldi	r18, 0x00	; 0
     a30:	9a 85       	ldd	r25, Y+10	; 0x0a
     a32:	8a 89       	ldd	r24, Y+18	; 0x12
     a34:	98 13       	cpse	r25, r24
     a36:	21 e0       	ldi	r18, 0x01	; 1
     a38:	2a 8b       	std	Y+18, r18	; 0x12
     a3a:	ce 01       	movw	r24, r28
     a3c:	41 96       	adiw	r24, 0x11	; 17
     a3e:	b0 c0       	rjmp	.+352    	; 0xba0 <__mulsf3+0x1e2>
     a40:	2d 84       	ldd	r2, Y+13	; 0x0d
     a42:	3e 84       	ldd	r3, Y+14	; 0x0e
     a44:	4f 84       	ldd	r4, Y+15	; 0x0f
     a46:	58 88       	ldd	r5, Y+16	; 0x10
     a48:	6d 88       	ldd	r6, Y+21	; 0x15
     a4a:	7e 88       	ldd	r7, Y+22	; 0x16
     a4c:	8f 88       	ldd	r8, Y+23	; 0x17
     a4e:	98 8c       	ldd	r9, Y+24	; 0x18
     a50:	ee 24       	eor	r14, r14
     a52:	ff 24       	eor	r15, r15
     a54:	87 01       	movw	r16, r14
     a56:	aa 24       	eor	r10, r10
     a58:	bb 24       	eor	r11, r11
     a5a:	65 01       	movw	r12, r10
     a5c:	40 e0       	ldi	r20, 0x00	; 0
     a5e:	50 e0       	ldi	r21, 0x00	; 0
     a60:	60 e0       	ldi	r22, 0x00	; 0
     a62:	70 e0       	ldi	r23, 0x00	; 0
     a64:	e0 e0       	ldi	r30, 0x00	; 0
     a66:	f0 e0       	ldi	r31, 0x00	; 0
     a68:	c1 01       	movw	r24, r2
     a6a:	81 70       	andi	r24, 0x01	; 1
     a6c:	90 70       	andi	r25, 0x00	; 0
     a6e:	89 2b       	or	r24, r25
     a70:	e9 f0       	breq	.+58     	; 0xaac <__mulsf3+0xee>
     a72:	e6 0c       	add	r14, r6
     a74:	f7 1c       	adc	r15, r7
     a76:	08 1d       	adc	r16, r8
     a78:	19 1d       	adc	r17, r9
     a7a:	9a 01       	movw	r18, r20
     a7c:	ab 01       	movw	r20, r22
     a7e:	2a 0d       	add	r18, r10
     a80:	3b 1d       	adc	r19, r11
     a82:	4c 1d       	adc	r20, r12
     a84:	5d 1d       	adc	r21, r13
     a86:	80 e0       	ldi	r24, 0x00	; 0
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	a0 e0       	ldi	r26, 0x00	; 0
     a8c:	b0 e0       	ldi	r27, 0x00	; 0
     a8e:	e6 14       	cp	r14, r6
     a90:	f7 04       	cpc	r15, r7
     a92:	08 05       	cpc	r16, r8
     a94:	19 05       	cpc	r17, r9
     a96:	20 f4       	brcc	.+8      	; 0xaa0 <__mulsf3+0xe2>
     a98:	81 e0       	ldi	r24, 0x01	; 1
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	a0 e0       	ldi	r26, 0x00	; 0
     a9e:	b0 e0       	ldi	r27, 0x00	; 0
     aa0:	ba 01       	movw	r22, r20
     aa2:	a9 01       	movw	r20, r18
     aa4:	48 0f       	add	r20, r24
     aa6:	59 1f       	adc	r21, r25
     aa8:	6a 1f       	adc	r22, r26
     aaa:	7b 1f       	adc	r23, r27
     aac:	aa 0c       	add	r10, r10
     aae:	bb 1c       	adc	r11, r11
     ab0:	cc 1c       	adc	r12, r12
     ab2:	dd 1c       	adc	r13, r13
     ab4:	97 fe       	sbrs	r9, 7
     ab6:	08 c0       	rjmp	.+16     	; 0xac8 <__mulsf3+0x10a>
     ab8:	81 e0       	ldi	r24, 0x01	; 1
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	a0 e0       	ldi	r26, 0x00	; 0
     abe:	b0 e0       	ldi	r27, 0x00	; 0
     ac0:	a8 2a       	or	r10, r24
     ac2:	b9 2a       	or	r11, r25
     ac4:	ca 2a       	or	r12, r26
     ac6:	db 2a       	or	r13, r27
     ac8:	31 96       	adiw	r30, 0x01	; 1
     aca:	e0 32       	cpi	r30, 0x20	; 32
     acc:	f1 05       	cpc	r31, r1
     ace:	49 f0       	breq	.+18     	; 0xae2 <__mulsf3+0x124>
     ad0:	66 0c       	add	r6, r6
     ad2:	77 1c       	adc	r7, r7
     ad4:	88 1c       	adc	r8, r8
     ad6:	99 1c       	adc	r9, r9
     ad8:	56 94       	lsr	r5
     ada:	47 94       	ror	r4
     adc:	37 94       	ror	r3
     ade:	27 94       	ror	r2
     ae0:	c3 cf       	rjmp	.-122    	; 0xa68 <__mulsf3+0xaa>
     ae2:	fa 85       	ldd	r31, Y+10	; 0x0a
     ae4:	ea 89       	ldd	r30, Y+18	; 0x12
     ae6:	2b 89       	ldd	r18, Y+19	; 0x13
     ae8:	3c 89       	ldd	r19, Y+20	; 0x14
     aea:	8b 85       	ldd	r24, Y+11	; 0x0b
     aec:	9c 85       	ldd	r25, Y+12	; 0x0c
     aee:	28 0f       	add	r18, r24
     af0:	39 1f       	adc	r19, r25
     af2:	2e 5f       	subi	r18, 0xFE	; 254
     af4:	3f 4f       	sbci	r19, 0xFF	; 255
     af6:	17 c0       	rjmp	.+46     	; 0xb26 <__mulsf3+0x168>
     af8:	ca 01       	movw	r24, r20
     afa:	81 70       	andi	r24, 0x01	; 1
     afc:	90 70       	andi	r25, 0x00	; 0
     afe:	89 2b       	or	r24, r25
     b00:	61 f0       	breq	.+24     	; 0xb1a <__mulsf3+0x15c>
     b02:	16 95       	lsr	r17
     b04:	07 95       	ror	r16
     b06:	f7 94       	ror	r15
     b08:	e7 94       	ror	r14
     b0a:	80 e0       	ldi	r24, 0x00	; 0
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	a0 e0       	ldi	r26, 0x00	; 0
     b10:	b0 e8       	ldi	r27, 0x80	; 128
     b12:	e8 2a       	or	r14, r24
     b14:	f9 2a       	or	r15, r25
     b16:	0a 2b       	or	r16, r26
     b18:	1b 2b       	or	r17, r27
     b1a:	76 95       	lsr	r23
     b1c:	67 95       	ror	r22
     b1e:	57 95       	ror	r21
     b20:	47 95       	ror	r20
     b22:	2f 5f       	subi	r18, 0xFF	; 255
     b24:	3f 4f       	sbci	r19, 0xFF	; 255
     b26:	77 fd       	sbrc	r23, 7
     b28:	e7 cf       	rjmp	.-50     	; 0xaf8 <__mulsf3+0x13a>
     b2a:	0c c0       	rjmp	.+24     	; 0xb44 <__mulsf3+0x186>
     b2c:	44 0f       	add	r20, r20
     b2e:	55 1f       	adc	r21, r21
     b30:	66 1f       	adc	r22, r22
     b32:	77 1f       	adc	r23, r23
     b34:	17 fd       	sbrc	r17, 7
     b36:	41 60       	ori	r20, 0x01	; 1
     b38:	ee 0c       	add	r14, r14
     b3a:	ff 1c       	adc	r15, r15
     b3c:	00 1f       	adc	r16, r16
     b3e:	11 1f       	adc	r17, r17
     b40:	21 50       	subi	r18, 0x01	; 1
     b42:	30 40       	sbci	r19, 0x00	; 0
     b44:	40 30       	cpi	r20, 0x00	; 0
     b46:	90 e0       	ldi	r25, 0x00	; 0
     b48:	59 07       	cpc	r21, r25
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	69 07       	cpc	r22, r25
     b4e:	90 e4       	ldi	r25, 0x40	; 64
     b50:	79 07       	cpc	r23, r25
     b52:	60 f3       	brcs	.-40     	; 0xb2c <__mulsf3+0x16e>
     b54:	2b 8f       	std	Y+27, r18	; 0x1b
     b56:	3c 8f       	std	Y+28, r19	; 0x1c
     b58:	db 01       	movw	r26, r22
     b5a:	ca 01       	movw	r24, r20
     b5c:	8f 77       	andi	r24, 0x7F	; 127
     b5e:	90 70       	andi	r25, 0x00	; 0
     b60:	a0 70       	andi	r26, 0x00	; 0
     b62:	b0 70       	andi	r27, 0x00	; 0
     b64:	80 34       	cpi	r24, 0x40	; 64
     b66:	91 05       	cpc	r25, r1
     b68:	a1 05       	cpc	r26, r1
     b6a:	b1 05       	cpc	r27, r1
     b6c:	61 f4       	brne	.+24     	; 0xb86 <__mulsf3+0x1c8>
     b6e:	47 fd       	sbrc	r20, 7
     b70:	0a c0       	rjmp	.+20     	; 0xb86 <__mulsf3+0x1c8>
     b72:	e1 14       	cp	r14, r1
     b74:	f1 04       	cpc	r15, r1
     b76:	01 05       	cpc	r16, r1
     b78:	11 05       	cpc	r17, r1
     b7a:	29 f0       	breq	.+10     	; 0xb86 <__mulsf3+0x1c8>
     b7c:	40 5c       	subi	r20, 0xC0	; 192
     b7e:	5f 4f       	sbci	r21, 0xFF	; 255
     b80:	6f 4f       	sbci	r22, 0xFF	; 255
     b82:	7f 4f       	sbci	r23, 0xFF	; 255
     b84:	40 78       	andi	r20, 0x80	; 128
     b86:	1a 8e       	std	Y+26, r1	; 0x1a
     b88:	fe 17       	cp	r31, r30
     b8a:	11 f0       	breq	.+4      	; 0xb90 <__mulsf3+0x1d2>
     b8c:	81 e0       	ldi	r24, 0x01	; 1
     b8e:	8a 8f       	std	Y+26, r24	; 0x1a
     b90:	4d 8f       	std	Y+29, r20	; 0x1d
     b92:	5e 8f       	std	Y+30, r21	; 0x1e
     b94:	6f 8f       	std	Y+31, r22	; 0x1f
     b96:	78 a3       	std	Y+32, r23	; 0x20
     b98:	83 e0       	ldi	r24, 0x03	; 3
     b9a:	89 8f       	std	Y+25, r24	; 0x19
     b9c:	ce 01       	movw	r24, r28
     b9e:	49 96       	adiw	r24, 0x19	; 25
     ba0:	d5 d0       	rcall	.+426    	; 0xd4c <__pack_f>
     ba2:	a0 96       	adiw	r28, 0x20	; 32
     ba4:	e2 e1       	ldi	r30, 0x12	; 18
     ba6:	94 c2       	rjmp	.+1320   	; 0x10d0 <__epilogue_restores__>

00000ba8 <__gtsf2>:
     ba8:	a8 e1       	ldi	r26, 0x18	; 24
     baa:	b0 e0       	ldi	r27, 0x00	; 0
     bac:	e9 ed       	ldi	r30, 0xD9	; 217
     bae:	f5 e0       	ldi	r31, 0x05	; 5
     bb0:	7f c2       	rjmp	.+1278   	; 0x10b0 <__prologue_saves__+0x18>
     bb2:	69 83       	std	Y+1, r22	; 0x01
     bb4:	7a 83       	std	Y+2, r23	; 0x02
     bb6:	8b 83       	std	Y+3, r24	; 0x03
     bb8:	9c 83       	std	Y+4, r25	; 0x04
     bba:	2d 83       	std	Y+5, r18	; 0x05
     bbc:	3e 83       	std	Y+6, r19	; 0x06
     bbe:	4f 83       	std	Y+7, r20	; 0x07
     bc0:	58 87       	std	Y+8, r21	; 0x08
     bc2:	89 e0       	ldi	r24, 0x09	; 9
     bc4:	e8 2e       	mov	r14, r24
     bc6:	f1 2c       	mov	r15, r1
     bc8:	ec 0e       	add	r14, r28
     bca:	fd 1e       	adc	r15, r29
     bcc:	ce 01       	movw	r24, r28
     bce:	01 96       	adiw	r24, 0x01	; 1
     bd0:	b7 01       	movw	r22, r14
     bd2:	91 d1       	rcall	.+802    	; 0xef6 <__unpack_f>
     bd4:	8e 01       	movw	r16, r28
     bd6:	0f 5e       	subi	r16, 0xEF	; 239
     bd8:	1f 4f       	sbci	r17, 0xFF	; 255
     bda:	ce 01       	movw	r24, r28
     bdc:	05 96       	adiw	r24, 0x05	; 5
     bde:	b8 01       	movw	r22, r16
     be0:	8a d1       	rcall	.+788    	; 0xef6 <__unpack_f>
     be2:	89 85       	ldd	r24, Y+9	; 0x09
     be4:	82 30       	cpi	r24, 0x02	; 2
     be6:	38 f0       	brcs	.+14     	; 0xbf6 <__gtsf2+0x4e>
     be8:	89 89       	ldd	r24, Y+17	; 0x11
     bea:	82 30       	cpi	r24, 0x02	; 2
     bec:	20 f0       	brcs	.+8      	; 0xbf6 <__gtsf2+0x4e>
     bee:	c7 01       	movw	r24, r14
     bf0:	b8 01       	movw	r22, r16
     bf2:	f9 d1       	rcall	.+1010   	; 0xfe6 <__fpcmp_parts_f>
     bf4:	01 c0       	rjmp	.+2      	; 0xbf8 <__gtsf2+0x50>
     bf6:	8f ef       	ldi	r24, 0xFF	; 255
     bf8:	68 96       	adiw	r28, 0x18	; 24
     bfa:	e6 e0       	ldi	r30, 0x06	; 6
     bfc:	75 c2       	rjmp	.+1258   	; 0x10e8 <__epilogue_restores__+0x18>

00000bfe <__gesf2>:
     bfe:	a8 e1       	ldi	r26, 0x18	; 24
     c00:	b0 e0       	ldi	r27, 0x00	; 0
     c02:	e4 e0       	ldi	r30, 0x04	; 4
     c04:	f6 e0       	ldi	r31, 0x06	; 6
     c06:	54 c2       	rjmp	.+1192   	; 0x10b0 <__prologue_saves__+0x18>
     c08:	69 83       	std	Y+1, r22	; 0x01
     c0a:	7a 83       	std	Y+2, r23	; 0x02
     c0c:	8b 83       	std	Y+3, r24	; 0x03
     c0e:	9c 83       	std	Y+4, r25	; 0x04
     c10:	2d 83       	std	Y+5, r18	; 0x05
     c12:	3e 83       	std	Y+6, r19	; 0x06
     c14:	4f 83       	std	Y+7, r20	; 0x07
     c16:	58 87       	std	Y+8, r21	; 0x08
     c18:	89 e0       	ldi	r24, 0x09	; 9
     c1a:	e8 2e       	mov	r14, r24
     c1c:	f1 2c       	mov	r15, r1
     c1e:	ec 0e       	add	r14, r28
     c20:	fd 1e       	adc	r15, r29
     c22:	ce 01       	movw	r24, r28
     c24:	01 96       	adiw	r24, 0x01	; 1
     c26:	b7 01       	movw	r22, r14
     c28:	66 d1       	rcall	.+716    	; 0xef6 <__unpack_f>
     c2a:	8e 01       	movw	r16, r28
     c2c:	0f 5e       	subi	r16, 0xEF	; 239
     c2e:	1f 4f       	sbci	r17, 0xFF	; 255
     c30:	ce 01       	movw	r24, r28
     c32:	05 96       	adiw	r24, 0x05	; 5
     c34:	b8 01       	movw	r22, r16
     c36:	5f d1       	rcall	.+702    	; 0xef6 <__unpack_f>
     c38:	89 85       	ldd	r24, Y+9	; 0x09
     c3a:	82 30       	cpi	r24, 0x02	; 2
     c3c:	38 f0       	brcs	.+14     	; 0xc4c <__gesf2+0x4e>
     c3e:	89 89       	ldd	r24, Y+17	; 0x11
     c40:	82 30       	cpi	r24, 0x02	; 2
     c42:	20 f0       	brcs	.+8      	; 0xc4c <__gesf2+0x4e>
     c44:	c7 01       	movw	r24, r14
     c46:	b8 01       	movw	r22, r16
     c48:	ce d1       	rcall	.+924    	; 0xfe6 <__fpcmp_parts_f>
     c4a:	01 c0       	rjmp	.+2      	; 0xc4e <__gesf2+0x50>
     c4c:	8f ef       	ldi	r24, 0xFF	; 255
     c4e:	68 96       	adiw	r28, 0x18	; 24
     c50:	e6 e0       	ldi	r30, 0x06	; 6
     c52:	4a c2       	rjmp	.+1172   	; 0x10e8 <__epilogue_restores__+0x18>

00000c54 <__ltsf2>:
     c54:	a8 e1       	ldi	r26, 0x18	; 24
     c56:	b0 e0       	ldi	r27, 0x00	; 0
     c58:	ef e2       	ldi	r30, 0x2F	; 47
     c5a:	f6 e0       	ldi	r31, 0x06	; 6
     c5c:	29 c2       	rjmp	.+1106   	; 0x10b0 <__prologue_saves__+0x18>
     c5e:	69 83       	std	Y+1, r22	; 0x01
     c60:	7a 83       	std	Y+2, r23	; 0x02
     c62:	8b 83       	std	Y+3, r24	; 0x03
     c64:	9c 83       	std	Y+4, r25	; 0x04
     c66:	2d 83       	std	Y+5, r18	; 0x05
     c68:	3e 83       	std	Y+6, r19	; 0x06
     c6a:	4f 83       	std	Y+7, r20	; 0x07
     c6c:	58 87       	std	Y+8, r21	; 0x08
     c6e:	89 e0       	ldi	r24, 0x09	; 9
     c70:	e8 2e       	mov	r14, r24
     c72:	f1 2c       	mov	r15, r1
     c74:	ec 0e       	add	r14, r28
     c76:	fd 1e       	adc	r15, r29
     c78:	ce 01       	movw	r24, r28
     c7a:	01 96       	adiw	r24, 0x01	; 1
     c7c:	b7 01       	movw	r22, r14
     c7e:	3b d1       	rcall	.+630    	; 0xef6 <__unpack_f>
     c80:	8e 01       	movw	r16, r28
     c82:	0f 5e       	subi	r16, 0xEF	; 239
     c84:	1f 4f       	sbci	r17, 0xFF	; 255
     c86:	ce 01       	movw	r24, r28
     c88:	05 96       	adiw	r24, 0x05	; 5
     c8a:	b8 01       	movw	r22, r16
     c8c:	34 d1       	rcall	.+616    	; 0xef6 <__unpack_f>
     c8e:	89 85       	ldd	r24, Y+9	; 0x09
     c90:	82 30       	cpi	r24, 0x02	; 2
     c92:	38 f0       	brcs	.+14     	; 0xca2 <__ltsf2+0x4e>
     c94:	89 89       	ldd	r24, Y+17	; 0x11
     c96:	82 30       	cpi	r24, 0x02	; 2
     c98:	20 f0       	brcs	.+8      	; 0xca2 <__ltsf2+0x4e>
     c9a:	c7 01       	movw	r24, r14
     c9c:	b8 01       	movw	r22, r16
     c9e:	a3 d1       	rcall	.+838    	; 0xfe6 <__fpcmp_parts_f>
     ca0:	01 c0       	rjmp	.+2      	; 0xca4 <__ltsf2+0x50>
     ca2:	81 e0       	ldi	r24, 0x01	; 1
     ca4:	68 96       	adiw	r28, 0x18	; 24
     ca6:	e6 e0       	ldi	r30, 0x06	; 6
     ca8:	1f c2       	rjmp	.+1086   	; 0x10e8 <__epilogue_restores__+0x18>

00000caa <__fixsfsi>:
     caa:	ac e0       	ldi	r26, 0x0C	; 12
     cac:	b0 e0       	ldi	r27, 0x00	; 0
     cae:	ea e5       	ldi	r30, 0x5A	; 90
     cb0:	f6 e0       	ldi	r31, 0x06	; 6
     cb2:	02 c2       	rjmp	.+1028   	; 0x10b8 <__prologue_saves__+0x20>
     cb4:	69 83       	std	Y+1, r22	; 0x01
     cb6:	7a 83       	std	Y+2, r23	; 0x02
     cb8:	8b 83       	std	Y+3, r24	; 0x03
     cba:	9c 83       	std	Y+4, r25	; 0x04
     cbc:	ce 01       	movw	r24, r28
     cbe:	01 96       	adiw	r24, 0x01	; 1
     cc0:	be 01       	movw	r22, r28
     cc2:	6b 5f       	subi	r22, 0xFB	; 251
     cc4:	7f 4f       	sbci	r23, 0xFF	; 255
     cc6:	17 d1       	rcall	.+558    	; 0xef6 <__unpack_f>
     cc8:	8d 81       	ldd	r24, Y+5	; 0x05
     cca:	82 30       	cpi	r24, 0x02	; 2
     ccc:	61 f1       	breq	.+88     	; 0xd26 <__fixsfsi+0x7c>
     cce:	82 30       	cpi	r24, 0x02	; 2
     cd0:	50 f1       	brcs	.+84     	; 0xd26 <__fixsfsi+0x7c>
     cd2:	84 30       	cpi	r24, 0x04	; 4
     cd4:	21 f4       	brne	.+8      	; 0xcde <__fixsfsi+0x34>
     cd6:	8e 81       	ldd	r24, Y+6	; 0x06
     cd8:	88 23       	and	r24, r24
     cda:	51 f1       	breq	.+84     	; 0xd30 <__fixsfsi+0x86>
     cdc:	2e c0       	rjmp	.+92     	; 0xd3a <__fixsfsi+0x90>
     cde:	2f 81       	ldd	r18, Y+7	; 0x07
     ce0:	38 85       	ldd	r19, Y+8	; 0x08
     ce2:	37 fd       	sbrc	r19, 7
     ce4:	20 c0       	rjmp	.+64     	; 0xd26 <__fixsfsi+0x7c>
     ce6:	6e 81       	ldd	r22, Y+6	; 0x06
     ce8:	2f 31       	cpi	r18, 0x1F	; 31
     cea:	31 05       	cpc	r19, r1
     cec:	1c f0       	brlt	.+6      	; 0xcf4 <__fixsfsi+0x4a>
     cee:	66 23       	and	r22, r22
     cf0:	f9 f0       	breq	.+62     	; 0xd30 <__fixsfsi+0x86>
     cf2:	23 c0       	rjmp	.+70     	; 0xd3a <__fixsfsi+0x90>
     cf4:	8e e1       	ldi	r24, 0x1E	; 30
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	82 1b       	sub	r24, r18
     cfa:	93 0b       	sbc	r25, r19
     cfc:	29 85       	ldd	r18, Y+9	; 0x09
     cfe:	3a 85       	ldd	r19, Y+10	; 0x0a
     d00:	4b 85       	ldd	r20, Y+11	; 0x0b
     d02:	5c 85       	ldd	r21, Y+12	; 0x0c
     d04:	04 c0       	rjmp	.+8      	; 0xd0e <__fixsfsi+0x64>
     d06:	56 95       	lsr	r21
     d08:	47 95       	ror	r20
     d0a:	37 95       	ror	r19
     d0c:	27 95       	ror	r18
     d0e:	8a 95       	dec	r24
     d10:	d2 f7       	brpl	.-12     	; 0xd06 <__fixsfsi+0x5c>
     d12:	66 23       	and	r22, r22
     d14:	b1 f0       	breq	.+44     	; 0xd42 <__fixsfsi+0x98>
     d16:	50 95       	com	r21
     d18:	40 95       	com	r20
     d1a:	30 95       	com	r19
     d1c:	21 95       	neg	r18
     d1e:	3f 4f       	sbci	r19, 0xFF	; 255
     d20:	4f 4f       	sbci	r20, 0xFF	; 255
     d22:	5f 4f       	sbci	r21, 0xFF	; 255
     d24:	0e c0       	rjmp	.+28     	; 0xd42 <__fixsfsi+0x98>
     d26:	20 e0       	ldi	r18, 0x00	; 0
     d28:	30 e0       	ldi	r19, 0x00	; 0
     d2a:	40 e0       	ldi	r20, 0x00	; 0
     d2c:	50 e0       	ldi	r21, 0x00	; 0
     d2e:	09 c0       	rjmp	.+18     	; 0xd42 <__fixsfsi+0x98>
     d30:	2f ef       	ldi	r18, 0xFF	; 255
     d32:	3f ef       	ldi	r19, 0xFF	; 255
     d34:	4f ef       	ldi	r20, 0xFF	; 255
     d36:	5f e7       	ldi	r21, 0x7F	; 127
     d38:	04 c0       	rjmp	.+8      	; 0xd42 <__fixsfsi+0x98>
     d3a:	20 e0       	ldi	r18, 0x00	; 0
     d3c:	30 e0       	ldi	r19, 0x00	; 0
     d3e:	40 e0       	ldi	r20, 0x00	; 0
     d40:	50 e8       	ldi	r21, 0x80	; 128
     d42:	b9 01       	movw	r22, r18
     d44:	ca 01       	movw	r24, r20
     d46:	2c 96       	adiw	r28, 0x0c	; 12
     d48:	e2 e0       	ldi	r30, 0x02	; 2
     d4a:	d2 c1       	rjmp	.+932    	; 0x10f0 <__epilogue_restores__+0x20>

00000d4c <__pack_f>:
     d4c:	df 92       	push	r13
     d4e:	ef 92       	push	r14
     d50:	ff 92       	push	r15
     d52:	0f 93       	push	r16
     d54:	1f 93       	push	r17
     d56:	fc 01       	movw	r30, r24
     d58:	e4 80       	ldd	r14, Z+4	; 0x04
     d5a:	f5 80       	ldd	r15, Z+5	; 0x05
     d5c:	06 81       	ldd	r16, Z+6	; 0x06
     d5e:	17 81       	ldd	r17, Z+7	; 0x07
     d60:	d1 80       	ldd	r13, Z+1	; 0x01
     d62:	80 81       	ld	r24, Z
     d64:	82 30       	cpi	r24, 0x02	; 2
     d66:	48 f4       	brcc	.+18     	; 0xd7a <__pack_f+0x2e>
     d68:	80 e0       	ldi	r24, 0x00	; 0
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	a0 e1       	ldi	r26, 0x10	; 16
     d6e:	b0 e0       	ldi	r27, 0x00	; 0
     d70:	e8 2a       	or	r14, r24
     d72:	f9 2a       	or	r15, r25
     d74:	0a 2b       	or	r16, r26
     d76:	1b 2b       	or	r17, r27
     d78:	a5 c0       	rjmp	.+330    	; 0xec4 <__pack_f+0x178>
     d7a:	84 30       	cpi	r24, 0x04	; 4
     d7c:	09 f4       	brne	.+2      	; 0xd80 <__pack_f+0x34>
     d7e:	9f c0       	rjmp	.+318    	; 0xebe <__pack_f+0x172>
     d80:	82 30       	cpi	r24, 0x02	; 2
     d82:	21 f4       	brne	.+8      	; 0xd8c <__pack_f+0x40>
     d84:	ee 24       	eor	r14, r14
     d86:	ff 24       	eor	r15, r15
     d88:	87 01       	movw	r16, r14
     d8a:	05 c0       	rjmp	.+10     	; 0xd96 <__pack_f+0x4a>
     d8c:	e1 14       	cp	r14, r1
     d8e:	f1 04       	cpc	r15, r1
     d90:	01 05       	cpc	r16, r1
     d92:	11 05       	cpc	r17, r1
     d94:	19 f4       	brne	.+6      	; 0xd9c <__pack_f+0x50>
     d96:	e0 e0       	ldi	r30, 0x00	; 0
     d98:	f0 e0       	ldi	r31, 0x00	; 0
     d9a:	96 c0       	rjmp	.+300    	; 0xec8 <__pack_f+0x17c>
     d9c:	62 81       	ldd	r22, Z+2	; 0x02
     d9e:	73 81       	ldd	r23, Z+3	; 0x03
     da0:	9f ef       	ldi	r25, 0xFF	; 255
     da2:	62 38       	cpi	r22, 0x82	; 130
     da4:	79 07       	cpc	r23, r25
     da6:	0c f0       	brlt	.+2      	; 0xdaa <__pack_f+0x5e>
     da8:	5b c0       	rjmp	.+182    	; 0xe60 <__pack_f+0x114>
     daa:	22 e8       	ldi	r18, 0x82	; 130
     dac:	3f ef       	ldi	r19, 0xFF	; 255
     dae:	26 1b       	sub	r18, r22
     db0:	37 0b       	sbc	r19, r23
     db2:	2a 31       	cpi	r18, 0x1A	; 26
     db4:	31 05       	cpc	r19, r1
     db6:	2c f0       	brlt	.+10     	; 0xdc2 <__pack_f+0x76>
     db8:	20 e0       	ldi	r18, 0x00	; 0
     dba:	30 e0       	ldi	r19, 0x00	; 0
     dbc:	40 e0       	ldi	r20, 0x00	; 0
     dbe:	50 e0       	ldi	r21, 0x00	; 0
     dc0:	2a c0       	rjmp	.+84     	; 0xe16 <__pack_f+0xca>
     dc2:	b8 01       	movw	r22, r16
     dc4:	a7 01       	movw	r20, r14
     dc6:	02 2e       	mov	r0, r18
     dc8:	04 c0       	rjmp	.+8      	; 0xdd2 <__pack_f+0x86>
     dca:	76 95       	lsr	r23
     dcc:	67 95       	ror	r22
     dce:	57 95       	ror	r21
     dd0:	47 95       	ror	r20
     dd2:	0a 94       	dec	r0
     dd4:	d2 f7       	brpl	.-12     	; 0xdca <__pack_f+0x7e>
     dd6:	81 e0       	ldi	r24, 0x01	; 1
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	a0 e0       	ldi	r26, 0x00	; 0
     ddc:	b0 e0       	ldi	r27, 0x00	; 0
     dde:	04 c0       	rjmp	.+8      	; 0xde8 <__pack_f+0x9c>
     de0:	88 0f       	add	r24, r24
     de2:	99 1f       	adc	r25, r25
     de4:	aa 1f       	adc	r26, r26
     de6:	bb 1f       	adc	r27, r27
     de8:	2a 95       	dec	r18
     dea:	d2 f7       	brpl	.-12     	; 0xde0 <__pack_f+0x94>
     dec:	01 97       	sbiw	r24, 0x01	; 1
     dee:	a1 09       	sbc	r26, r1
     df0:	b1 09       	sbc	r27, r1
     df2:	8e 21       	and	r24, r14
     df4:	9f 21       	and	r25, r15
     df6:	a0 23       	and	r26, r16
     df8:	b1 23       	and	r27, r17
     dfa:	00 97       	sbiw	r24, 0x00	; 0
     dfc:	a1 05       	cpc	r26, r1
     dfe:	b1 05       	cpc	r27, r1
     e00:	21 f0       	breq	.+8      	; 0xe0a <__pack_f+0xbe>
     e02:	81 e0       	ldi	r24, 0x01	; 1
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	a0 e0       	ldi	r26, 0x00	; 0
     e08:	b0 e0       	ldi	r27, 0x00	; 0
     e0a:	9a 01       	movw	r18, r20
     e0c:	ab 01       	movw	r20, r22
     e0e:	28 2b       	or	r18, r24
     e10:	39 2b       	or	r19, r25
     e12:	4a 2b       	or	r20, r26
     e14:	5b 2b       	or	r21, r27
     e16:	da 01       	movw	r26, r20
     e18:	c9 01       	movw	r24, r18
     e1a:	8f 77       	andi	r24, 0x7F	; 127
     e1c:	90 70       	andi	r25, 0x00	; 0
     e1e:	a0 70       	andi	r26, 0x00	; 0
     e20:	b0 70       	andi	r27, 0x00	; 0
     e22:	80 34       	cpi	r24, 0x40	; 64
     e24:	91 05       	cpc	r25, r1
     e26:	a1 05       	cpc	r26, r1
     e28:	b1 05       	cpc	r27, r1
     e2a:	39 f4       	brne	.+14     	; 0xe3a <__pack_f+0xee>
     e2c:	27 ff       	sbrs	r18, 7
     e2e:	09 c0       	rjmp	.+18     	; 0xe42 <__pack_f+0xf6>
     e30:	20 5c       	subi	r18, 0xC0	; 192
     e32:	3f 4f       	sbci	r19, 0xFF	; 255
     e34:	4f 4f       	sbci	r20, 0xFF	; 255
     e36:	5f 4f       	sbci	r21, 0xFF	; 255
     e38:	04 c0       	rjmp	.+8      	; 0xe42 <__pack_f+0xf6>
     e3a:	21 5c       	subi	r18, 0xC1	; 193
     e3c:	3f 4f       	sbci	r19, 0xFF	; 255
     e3e:	4f 4f       	sbci	r20, 0xFF	; 255
     e40:	5f 4f       	sbci	r21, 0xFF	; 255
     e42:	e0 e0       	ldi	r30, 0x00	; 0
     e44:	f0 e0       	ldi	r31, 0x00	; 0
     e46:	20 30       	cpi	r18, 0x00	; 0
     e48:	a0 e0       	ldi	r26, 0x00	; 0
     e4a:	3a 07       	cpc	r19, r26
     e4c:	a0 e0       	ldi	r26, 0x00	; 0
     e4e:	4a 07       	cpc	r20, r26
     e50:	a0 e4       	ldi	r26, 0x40	; 64
     e52:	5a 07       	cpc	r21, r26
     e54:	10 f0       	brcs	.+4      	; 0xe5a <__pack_f+0x10e>
     e56:	e1 e0       	ldi	r30, 0x01	; 1
     e58:	f0 e0       	ldi	r31, 0x00	; 0
     e5a:	79 01       	movw	r14, r18
     e5c:	8a 01       	movw	r16, r20
     e5e:	27 c0       	rjmp	.+78     	; 0xeae <__pack_f+0x162>
     e60:	60 38       	cpi	r22, 0x80	; 128
     e62:	71 05       	cpc	r23, r1
     e64:	64 f5       	brge	.+88     	; 0xebe <__pack_f+0x172>
     e66:	fb 01       	movw	r30, r22
     e68:	e1 58       	subi	r30, 0x81	; 129
     e6a:	ff 4f       	sbci	r31, 0xFF	; 255
     e6c:	d8 01       	movw	r26, r16
     e6e:	c7 01       	movw	r24, r14
     e70:	8f 77       	andi	r24, 0x7F	; 127
     e72:	90 70       	andi	r25, 0x00	; 0
     e74:	a0 70       	andi	r26, 0x00	; 0
     e76:	b0 70       	andi	r27, 0x00	; 0
     e78:	80 34       	cpi	r24, 0x40	; 64
     e7a:	91 05       	cpc	r25, r1
     e7c:	a1 05       	cpc	r26, r1
     e7e:	b1 05       	cpc	r27, r1
     e80:	39 f4       	brne	.+14     	; 0xe90 <__pack_f+0x144>
     e82:	e7 fe       	sbrs	r14, 7
     e84:	0d c0       	rjmp	.+26     	; 0xea0 <__pack_f+0x154>
     e86:	80 e4       	ldi	r24, 0x40	; 64
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	a0 e0       	ldi	r26, 0x00	; 0
     e8c:	b0 e0       	ldi	r27, 0x00	; 0
     e8e:	04 c0       	rjmp	.+8      	; 0xe98 <__pack_f+0x14c>
     e90:	8f e3       	ldi	r24, 0x3F	; 63
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	a0 e0       	ldi	r26, 0x00	; 0
     e96:	b0 e0       	ldi	r27, 0x00	; 0
     e98:	e8 0e       	add	r14, r24
     e9a:	f9 1e       	adc	r15, r25
     e9c:	0a 1f       	adc	r16, r26
     e9e:	1b 1f       	adc	r17, r27
     ea0:	17 ff       	sbrs	r17, 7
     ea2:	05 c0       	rjmp	.+10     	; 0xeae <__pack_f+0x162>
     ea4:	16 95       	lsr	r17
     ea6:	07 95       	ror	r16
     ea8:	f7 94       	ror	r15
     eaa:	e7 94       	ror	r14
     eac:	31 96       	adiw	r30, 0x01	; 1
     eae:	87 e0       	ldi	r24, 0x07	; 7
     eb0:	16 95       	lsr	r17
     eb2:	07 95       	ror	r16
     eb4:	f7 94       	ror	r15
     eb6:	e7 94       	ror	r14
     eb8:	8a 95       	dec	r24
     eba:	d1 f7       	brne	.-12     	; 0xeb0 <__pack_f+0x164>
     ebc:	05 c0       	rjmp	.+10     	; 0xec8 <__pack_f+0x17c>
     ebe:	ee 24       	eor	r14, r14
     ec0:	ff 24       	eor	r15, r15
     ec2:	87 01       	movw	r16, r14
     ec4:	ef ef       	ldi	r30, 0xFF	; 255
     ec6:	f0 e0       	ldi	r31, 0x00	; 0
     ec8:	6e 2f       	mov	r22, r30
     eca:	67 95       	ror	r22
     ecc:	66 27       	eor	r22, r22
     ece:	67 95       	ror	r22
     ed0:	90 2f       	mov	r25, r16
     ed2:	9f 77       	andi	r25, 0x7F	; 127
     ed4:	d7 94       	ror	r13
     ed6:	dd 24       	eor	r13, r13
     ed8:	d7 94       	ror	r13
     eda:	8e 2f       	mov	r24, r30
     edc:	86 95       	lsr	r24
     ede:	49 2f       	mov	r20, r25
     ee0:	46 2b       	or	r20, r22
     ee2:	58 2f       	mov	r21, r24
     ee4:	5d 29       	or	r21, r13
     ee6:	b7 01       	movw	r22, r14
     ee8:	ca 01       	movw	r24, r20
     eea:	1f 91       	pop	r17
     eec:	0f 91       	pop	r16
     eee:	ff 90       	pop	r15
     ef0:	ef 90       	pop	r14
     ef2:	df 90       	pop	r13
     ef4:	08 95       	ret

00000ef6 <__unpack_f>:
     ef6:	fc 01       	movw	r30, r24
     ef8:	db 01       	movw	r26, r22
     efa:	40 81       	ld	r20, Z
     efc:	51 81       	ldd	r21, Z+1	; 0x01
     efe:	22 81       	ldd	r18, Z+2	; 0x02
     f00:	62 2f       	mov	r22, r18
     f02:	6f 77       	andi	r22, 0x7F	; 127
     f04:	70 e0       	ldi	r23, 0x00	; 0
     f06:	22 1f       	adc	r18, r18
     f08:	22 27       	eor	r18, r18
     f0a:	22 1f       	adc	r18, r18
     f0c:	93 81       	ldd	r25, Z+3	; 0x03
     f0e:	89 2f       	mov	r24, r25
     f10:	88 0f       	add	r24, r24
     f12:	82 2b       	or	r24, r18
     f14:	28 2f       	mov	r18, r24
     f16:	30 e0       	ldi	r19, 0x00	; 0
     f18:	99 1f       	adc	r25, r25
     f1a:	99 27       	eor	r25, r25
     f1c:	99 1f       	adc	r25, r25
     f1e:	11 96       	adiw	r26, 0x01	; 1
     f20:	9c 93       	st	X, r25
     f22:	11 97       	sbiw	r26, 0x01	; 1
     f24:	21 15       	cp	r18, r1
     f26:	31 05       	cpc	r19, r1
     f28:	a9 f5       	brne	.+106    	; 0xf94 <__unpack_f+0x9e>
     f2a:	41 15       	cp	r20, r1
     f2c:	51 05       	cpc	r21, r1
     f2e:	61 05       	cpc	r22, r1
     f30:	71 05       	cpc	r23, r1
     f32:	11 f4       	brne	.+4      	; 0xf38 <__unpack_f+0x42>
     f34:	82 e0       	ldi	r24, 0x02	; 2
     f36:	37 c0       	rjmp	.+110    	; 0xfa6 <__unpack_f+0xb0>
     f38:	82 e8       	ldi	r24, 0x82	; 130
     f3a:	9f ef       	ldi	r25, 0xFF	; 255
     f3c:	13 96       	adiw	r26, 0x03	; 3
     f3e:	9c 93       	st	X, r25
     f40:	8e 93       	st	-X, r24
     f42:	12 97       	sbiw	r26, 0x02	; 2
     f44:	9a 01       	movw	r18, r20
     f46:	ab 01       	movw	r20, r22
     f48:	67 e0       	ldi	r22, 0x07	; 7
     f4a:	22 0f       	add	r18, r18
     f4c:	33 1f       	adc	r19, r19
     f4e:	44 1f       	adc	r20, r20
     f50:	55 1f       	adc	r21, r21
     f52:	6a 95       	dec	r22
     f54:	d1 f7       	brne	.-12     	; 0xf4a <__unpack_f+0x54>
     f56:	83 e0       	ldi	r24, 0x03	; 3
     f58:	8c 93       	st	X, r24
     f5a:	0d c0       	rjmp	.+26     	; 0xf76 <__unpack_f+0x80>
     f5c:	22 0f       	add	r18, r18
     f5e:	33 1f       	adc	r19, r19
     f60:	44 1f       	adc	r20, r20
     f62:	55 1f       	adc	r21, r21
     f64:	12 96       	adiw	r26, 0x02	; 2
     f66:	8d 91       	ld	r24, X+
     f68:	9c 91       	ld	r25, X
     f6a:	13 97       	sbiw	r26, 0x03	; 3
     f6c:	01 97       	sbiw	r24, 0x01	; 1
     f6e:	13 96       	adiw	r26, 0x03	; 3
     f70:	9c 93       	st	X, r25
     f72:	8e 93       	st	-X, r24
     f74:	12 97       	sbiw	r26, 0x02	; 2
     f76:	20 30       	cpi	r18, 0x00	; 0
     f78:	80 e0       	ldi	r24, 0x00	; 0
     f7a:	38 07       	cpc	r19, r24
     f7c:	80 e0       	ldi	r24, 0x00	; 0
     f7e:	48 07       	cpc	r20, r24
     f80:	80 e4       	ldi	r24, 0x40	; 64
     f82:	58 07       	cpc	r21, r24
     f84:	58 f3       	brcs	.-42     	; 0xf5c <__unpack_f+0x66>
     f86:	14 96       	adiw	r26, 0x04	; 4
     f88:	2d 93       	st	X+, r18
     f8a:	3d 93       	st	X+, r19
     f8c:	4d 93       	st	X+, r20
     f8e:	5c 93       	st	X, r21
     f90:	17 97       	sbiw	r26, 0x07	; 7
     f92:	08 95       	ret
     f94:	2f 3f       	cpi	r18, 0xFF	; 255
     f96:	31 05       	cpc	r19, r1
     f98:	79 f4       	brne	.+30     	; 0xfb8 <__unpack_f+0xc2>
     f9a:	41 15       	cp	r20, r1
     f9c:	51 05       	cpc	r21, r1
     f9e:	61 05       	cpc	r22, r1
     fa0:	71 05       	cpc	r23, r1
     fa2:	19 f4       	brne	.+6      	; 0xfaa <__unpack_f+0xb4>
     fa4:	84 e0       	ldi	r24, 0x04	; 4
     fa6:	8c 93       	st	X, r24
     fa8:	08 95       	ret
     faa:	64 ff       	sbrs	r22, 4
     fac:	03 c0       	rjmp	.+6      	; 0xfb4 <__unpack_f+0xbe>
     fae:	81 e0       	ldi	r24, 0x01	; 1
     fb0:	8c 93       	st	X, r24
     fb2:	12 c0       	rjmp	.+36     	; 0xfd8 <__unpack_f+0xe2>
     fb4:	1c 92       	st	X, r1
     fb6:	10 c0       	rjmp	.+32     	; 0xfd8 <__unpack_f+0xe2>
     fb8:	2f 57       	subi	r18, 0x7F	; 127
     fba:	30 40       	sbci	r19, 0x00	; 0
     fbc:	13 96       	adiw	r26, 0x03	; 3
     fbe:	3c 93       	st	X, r19
     fc0:	2e 93       	st	-X, r18
     fc2:	12 97       	sbiw	r26, 0x02	; 2
     fc4:	83 e0       	ldi	r24, 0x03	; 3
     fc6:	8c 93       	st	X, r24
     fc8:	87 e0       	ldi	r24, 0x07	; 7
     fca:	44 0f       	add	r20, r20
     fcc:	55 1f       	adc	r21, r21
     fce:	66 1f       	adc	r22, r22
     fd0:	77 1f       	adc	r23, r23
     fd2:	8a 95       	dec	r24
     fd4:	d1 f7       	brne	.-12     	; 0xfca <__unpack_f+0xd4>
     fd6:	70 64       	ori	r23, 0x40	; 64
     fd8:	14 96       	adiw	r26, 0x04	; 4
     fda:	4d 93       	st	X+, r20
     fdc:	5d 93       	st	X+, r21
     fde:	6d 93       	st	X+, r22
     fe0:	7c 93       	st	X, r23
     fe2:	17 97       	sbiw	r26, 0x07	; 7
     fe4:	08 95       	ret

00000fe6 <__fpcmp_parts_f>:
     fe6:	1f 93       	push	r17
     fe8:	dc 01       	movw	r26, r24
     fea:	fb 01       	movw	r30, r22
     fec:	9c 91       	ld	r25, X
     fee:	92 30       	cpi	r25, 0x02	; 2
     ff0:	08 f4       	brcc	.+2      	; 0xff4 <__fpcmp_parts_f+0xe>
     ff2:	47 c0       	rjmp	.+142    	; 0x1082 <__fpcmp_parts_f+0x9c>
     ff4:	80 81       	ld	r24, Z
     ff6:	82 30       	cpi	r24, 0x02	; 2
     ff8:	08 f4       	brcc	.+2      	; 0xffc <__fpcmp_parts_f+0x16>
     ffa:	43 c0       	rjmp	.+134    	; 0x1082 <__fpcmp_parts_f+0x9c>
     ffc:	94 30       	cpi	r25, 0x04	; 4
     ffe:	51 f4       	brne	.+20     	; 0x1014 <__fpcmp_parts_f+0x2e>
    1000:	11 96       	adiw	r26, 0x01	; 1
    1002:	1c 91       	ld	r17, X
    1004:	84 30       	cpi	r24, 0x04	; 4
    1006:	99 f5       	brne	.+102    	; 0x106e <__fpcmp_parts_f+0x88>
    1008:	81 81       	ldd	r24, Z+1	; 0x01
    100a:	68 2f       	mov	r22, r24
    100c:	70 e0       	ldi	r23, 0x00	; 0
    100e:	61 1b       	sub	r22, r17
    1010:	71 09       	sbc	r23, r1
    1012:	3f c0       	rjmp	.+126    	; 0x1092 <__fpcmp_parts_f+0xac>
    1014:	84 30       	cpi	r24, 0x04	; 4
    1016:	21 f0       	breq	.+8      	; 0x1020 <__fpcmp_parts_f+0x3a>
    1018:	92 30       	cpi	r25, 0x02	; 2
    101a:	31 f4       	brne	.+12     	; 0x1028 <__fpcmp_parts_f+0x42>
    101c:	82 30       	cpi	r24, 0x02	; 2
    101e:	b9 f1       	breq	.+110    	; 0x108e <__fpcmp_parts_f+0xa8>
    1020:	81 81       	ldd	r24, Z+1	; 0x01
    1022:	88 23       	and	r24, r24
    1024:	89 f1       	breq	.+98     	; 0x1088 <__fpcmp_parts_f+0xa2>
    1026:	2d c0       	rjmp	.+90     	; 0x1082 <__fpcmp_parts_f+0x9c>
    1028:	11 96       	adiw	r26, 0x01	; 1
    102a:	1c 91       	ld	r17, X
    102c:	11 97       	sbiw	r26, 0x01	; 1
    102e:	82 30       	cpi	r24, 0x02	; 2
    1030:	f1 f0       	breq	.+60     	; 0x106e <__fpcmp_parts_f+0x88>
    1032:	81 81       	ldd	r24, Z+1	; 0x01
    1034:	18 17       	cp	r17, r24
    1036:	d9 f4       	brne	.+54     	; 0x106e <__fpcmp_parts_f+0x88>
    1038:	12 96       	adiw	r26, 0x02	; 2
    103a:	2d 91       	ld	r18, X+
    103c:	3c 91       	ld	r19, X
    103e:	13 97       	sbiw	r26, 0x03	; 3
    1040:	82 81       	ldd	r24, Z+2	; 0x02
    1042:	93 81       	ldd	r25, Z+3	; 0x03
    1044:	82 17       	cp	r24, r18
    1046:	93 07       	cpc	r25, r19
    1048:	94 f0       	brlt	.+36     	; 0x106e <__fpcmp_parts_f+0x88>
    104a:	28 17       	cp	r18, r24
    104c:	39 07       	cpc	r19, r25
    104e:	bc f0       	brlt	.+46     	; 0x107e <__fpcmp_parts_f+0x98>
    1050:	14 96       	adiw	r26, 0x04	; 4
    1052:	8d 91       	ld	r24, X+
    1054:	9d 91       	ld	r25, X+
    1056:	0d 90       	ld	r0, X+
    1058:	bc 91       	ld	r27, X
    105a:	a0 2d       	mov	r26, r0
    105c:	24 81       	ldd	r18, Z+4	; 0x04
    105e:	35 81       	ldd	r19, Z+5	; 0x05
    1060:	46 81       	ldd	r20, Z+6	; 0x06
    1062:	57 81       	ldd	r21, Z+7	; 0x07
    1064:	28 17       	cp	r18, r24
    1066:	39 07       	cpc	r19, r25
    1068:	4a 07       	cpc	r20, r26
    106a:	5b 07       	cpc	r21, r27
    106c:	18 f4       	brcc	.+6      	; 0x1074 <__fpcmp_parts_f+0x8e>
    106e:	11 23       	and	r17, r17
    1070:	41 f0       	breq	.+16     	; 0x1082 <__fpcmp_parts_f+0x9c>
    1072:	0a c0       	rjmp	.+20     	; 0x1088 <__fpcmp_parts_f+0xa2>
    1074:	82 17       	cp	r24, r18
    1076:	93 07       	cpc	r25, r19
    1078:	a4 07       	cpc	r26, r20
    107a:	b5 07       	cpc	r27, r21
    107c:	40 f4       	brcc	.+16     	; 0x108e <__fpcmp_parts_f+0xa8>
    107e:	11 23       	and	r17, r17
    1080:	19 f0       	breq	.+6      	; 0x1088 <__fpcmp_parts_f+0xa2>
    1082:	61 e0       	ldi	r22, 0x01	; 1
    1084:	70 e0       	ldi	r23, 0x00	; 0
    1086:	05 c0       	rjmp	.+10     	; 0x1092 <__fpcmp_parts_f+0xac>
    1088:	6f ef       	ldi	r22, 0xFF	; 255
    108a:	7f ef       	ldi	r23, 0xFF	; 255
    108c:	02 c0       	rjmp	.+4      	; 0x1092 <__fpcmp_parts_f+0xac>
    108e:	60 e0       	ldi	r22, 0x00	; 0
    1090:	70 e0       	ldi	r23, 0x00	; 0
    1092:	cb 01       	movw	r24, r22
    1094:	1f 91       	pop	r17
    1096:	08 95       	ret

00001098 <__prologue_saves__>:
    1098:	2f 92       	push	r2
    109a:	3f 92       	push	r3
    109c:	4f 92       	push	r4
    109e:	5f 92       	push	r5
    10a0:	6f 92       	push	r6
    10a2:	7f 92       	push	r7
    10a4:	8f 92       	push	r8
    10a6:	9f 92       	push	r9
    10a8:	af 92       	push	r10
    10aa:	bf 92       	push	r11
    10ac:	cf 92       	push	r12
    10ae:	df 92       	push	r13
    10b0:	ef 92       	push	r14
    10b2:	ff 92       	push	r15
    10b4:	0f 93       	push	r16
    10b6:	1f 93       	push	r17
    10b8:	cf 93       	push	r28
    10ba:	df 93       	push	r29
    10bc:	cd b7       	in	r28, 0x3d	; 61
    10be:	de b7       	in	r29, 0x3e	; 62
    10c0:	ca 1b       	sub	r28, r26
    10c2:	db 0b       	sbc	r29, r27
    10c4:	0f b6       	in	r0, 0x3f	; 63
    10c6:	f8 94       	cli
    10c8:	de bf       	out	0x3e, r29	; 62
    10ca:	0f be       	out	0x3f, r0	; 63
    10cc:	cd bf       	out	0x3d, r28	; 61
    10ce:	09 94       	ijmp

000010d0 <__epilogue_restores__>:
    10d0:	2a 88       	ldd	r2, Y+18	; 0x12
    10d2:	39 88       	ldd	r3, Y+17	; 0x11
    10d4:	48 88       	ldd	r4, Y+16	; 0x10
    10d6:	5f 84       	ldd	r5, Y+15	; 0x0f
    10d8:	6e 84       	ldd	r6, Y+14	; 0x0e
    10da:	7d 84       	ldd	r7, Y+13	; 0x0d
    10dc:	8c 84       	ldd	r8, Y+12	; 0x0c
    10de:	9b 84       	ldd	r9, Y+11	; 0x0b
    10e0:	aa 84       	ldd	r10, Y+10	; 0x0a
    10e2:	b9 84       	ldd	r11, Y+9	; 0x09
    10e4:	c8 84       	ldd	r12, Y+8	; 0x08
    10e6:	df 80       	ldd	r13, Y+7	; 0x07
    10e8:	ee 80       	ldd	r14, Y+6	; 0x06
    10ea:	fd 80       	ldd	r15, Y+5	; 0x05
    10ec:	0c 81       	ldd	r16, Y+4	; 0x04
    10ee:	1b 81       	ldd	r17, Y+3	; 0x03
    10f0:	aa 81       	ldd	r26, Y+2	; 0x02
    10f2:	b9 81       	ldd	r27, Y+1	; 0x01
    10f4:	ce 0f       	add	r28, r30
    10f6:	d1 1d       	adc	r29, r1
    10f8:	0f b6       	in	r0, 0x3f	; 63
    10fa:	f8 94       	cli
    10fc:	de bf       	out	0x3e, r29	; 62
    10fe:	0f be       	out	0x3f, r0	; 63
    1100:	cd bf       	out	0x3d, r28	; 61
    1102:	ed 01       	movw	r28, r26
    1104:	08 95       	ret

00001106 <_exit>:
    1106:	f8 94       	cli

00001108 <__stop_program>:
    1108:	ff cf       	rjmp	.-2      	; 0x1108 <__stop_program>
